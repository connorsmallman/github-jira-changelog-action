[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/jira.js",
    "content": "import request from 'request-promise';\nimport url from 'url';\n\n/**\n * @name JiraApi\n * @class\n * Wrapper for the JIRA Rest Api\n * https://docs.atlassian.com/jira/REST/6.4.8/\n */\nexport default class JiraApi {\n  /**\n   * @constructor\n   * @function\n   * @param {JiraApiOptions} options\n   */\n  constructor(options) {\n    this.protocol = options.protocol || 'http';\n    this.host = options.host;\n    this.port = options.port || null;\n    this.apiVersion = options.apiVersion || '2';\n    this.base = options.base || '';\n    this.intermediatePath = options.intermediatePath;\n    this.strictSSL = options.hasOwnProperty('strictSSL') ? options.strictSSL : true;\n    // This is so we can fake during unit tests\n    this.request = options.request || request;\n    this.webhookVersion = options.webHookVersion || '1.0';\n    this.greenhopperVersion = options.greenhopperVersion || '1.0';\n    this.baseOptions = {};\n\n    if (options.ca) {\n      this.baseOptions.ca = options.ca;\n    }\n\n    if (options.oauth && options.oauth.consumer_key && options.oauth.access_token) {\n      this.baseOptions.oauth = {\n        consumer_key: options.oauth.consumer_key,\n        consumer_secret: options.oauth.consumer_secret,\n        token: options.oauth.access_token,\n        token_secret: options.oauth.access_token_secret,\n        signature_method: options.oauth.signature_method || 'RSA-SHA1',\n      };\n    } else if (options.bearer) {\n      this.baseOptions.auth = {\n        user: '',\n        pass: '',\n        sendImmediately: true,\n        bearer: options.bearer,\n      };\n    } else if (options.username && options.password) {\n      this.baseOptions.auth = {\n        user: options.username,\n        pass: options.password,\n      };\n    }\n\n    if (options.timeout) {\n      this.baseOptions.timeout = options.timeout;\n    }\n  }\n\n  /**\n   * @typedef JiraApiOptions\n   * @type {object}\n   * @property {string} [protocol=http] - What protocol to use to connect to\n   * jira? Ex: http|https\n   * @property {string} host - What host is this tool connecting to for the jira\n   * instance? Ex: jira.somehost.com\n   * @property {string} [port] - What port is this tool connecting to jira with? Only needed for\n   * none standard ports. Ex: 8080, 3000, etc\n   * @property {string} [username] - Specify a username for this tool to authenticate all\n   * requests with.\n   * @property {string} [password] - Specify a password for this tool to authenticate all\n   * requests with. Cloud users need to generate an [API token](https://confluence.atlassian.com/cloud/api-tokens-938839638.html) for this value.\n   * @property {string} [apiVersion=2] - What version of the jira rest api is the instance the\n   * tool is connecting to?\n   * @property {string} [base] - What other url parts exist, if any, before the rest/api/\n   * section?\n   * @property {string} [intermediatePath] - If specified, overwrites the default rest/api/version\n   * section of the uri\n   * @property {boolean} [strictSSL=true] - Does this tool require each request to be\n   * authenticated?  Defaults to true.\n   * @property {function} [request] - What method does this tool use to make its requests?\n   * Defaults to request from request-promise\n   * @property {number} [timeout] - Integer containing the number of milliseconds to wait for a\n   * server to send response headers (and start the response body) before aborting the request. Note\n   * that if the underlying TCP connection cannot be established, the OS-wide TCP connection timeout\n   * will overrule the timeout option ([the default in Linux can be anywhere from 20-120 *\n   * seconds](http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout)).\n   * @property {string} [webhookVersion=1.0] - What webhook version does this api wrapper need to\n   * hit?\n   * @property {string} [greenhopperVersion=1.0] - What webhook version does this api wrapper need\n   * to hit?\n   * @property {string} [ca] - Specify a CA certificate\n   * @property {OAuth} [oauth] - Specify an OAuth object for this tool to authenticate all requests\n   * using OAuth.\n   * @property {string} [bearer] - Specify an OAuth bearer token to authenticate all requests with.\n   */\n\n  /**\n   * @typedef OAuth\n   * @type {object}\n   * @property {string} consumer_key - The consumer entered in Jira Preferences.\n   * @property {string} consumer_secret - The private RSA file.\n   * @property {string} access_token - The generated access token.\n   * @property {string} access_token_secret - The generated access toke secret.\n   * @property {string} signature_method [signature_method=RSA-SHA1] - OAuth signurate methode\n   * Possible values RSA-SHA1, HMAC-SHA1, PLAINTEXT. Jira Cloud supports only RSA-SHA1.\n   */\n\n  /**\n   *  @typedef {object} UriOptions\n   *  @property {string} pathname - The url after the specific functions path\n   *  @property {object} [query] - An object of all query parameters\n   *  @property {string} [intermediatePath] - Overwrites with specified path\n   */\n\n  /**\n   * @name makeRequestHeader\n   * @function\n   * Creates a requestOptions object based on the default template for one\n   * @param {string} uri\n   * @param {object} [options] - an object containing fields and formatting how the\n   */\n  makeRequestHeader(uri, options = {}) {\n    return {\n      rejectUnauthorized: this.strictSSL,\n      method: options.method || 'GET',\n      uri,\n      json: true,\n      ...options,\n    };\n  }\n\n  /**\n   * @typedef makeRequestHeaderOptions\n   * @type {object}\n   * @property {string} [method] - HTTP Request Method. ie GET, POST, PUT, DELETE\n   */\n\n  /**\n   * @name makeUri\n   * @function\n   * Creates a URI object for a given pathname\n   * @param {object} [options] - an object containing path information\n   */\n  makeUri({\n    pathname, query, intermediatePath, encode = false,\n  }) {\n    const intermediateToUse = this.intermediatePath || intermediatePath;\n    const tempPath = intermediateToUse || `/rest/api/${this.apiVersion}`;\n    const uri = url.format({\n      protocol: this.protocol,\n      hostname: this.host,\n      port: this.port,\n      pathname: `${this.base}${tempPath}${pathname}`,\n      query,\n    });\n    return encode ? encodeURI(uri) : decodeURIComponent(uri);\n  }\n\n  /**\n   * @typedef makeUriOptions\n   * @type {object}\n   * @property {string} pathname - The url after the /rest/api/version\n   * @property {object} query - a query object\n   * @property {string} intermediatePath - If specified will overwrite the /rest/api/version section\n   */\n\n  /**\n   * @name makeWebhookUri\n   * @function\n   * Creates a URI object for a given pathName\n   * @param {object} [options] - An options object specifying uri information\n   */\n  makeWebhookUri({ pathname, intermediatePath }) {\n    const intermediateToUse = this.intermediatePath || intermediatePath;\n    const tempPath = intermediateToUse || `/rest/webhooks/${this.webhookVersion}`;\n    const uri = url.format({\n      protocol: this.protocol,\n      hostname: this.host,\n      port: this.port,\n      pathname: `${this.base}${tempPath}${pathname}`,\n    });\n    return decodeURIComponent(uri);\n  }\n\n  /**\n   * @typedef makeWebhookUriOptions\n   * @type {object}\n   * @property {string} pathname - The url after the /rest/webhooks\n   * @property {string} intermediatePath - If specified will overwrite the /rest/webhooks section\n   */\n\n  /**\n   * @name makeSprintQueryUri\n   * @function\n   * Creates a URI object for a given pathName\n   * @param {object} [options] - The url after the /rest/\n   */\n  makeSprintQueryUri({ pathname, query, intermediatePath }) {\n    const intermediateToUse = this.intermediatePath || intermediatePath;\n    const tempPath = intermediateToUse || `/rest/greenhopper/${this.greenhopperVersion}`;\n    const uri = url.format({\n      protocol: this.protocol,\n      hostname: this.host,\n      port: this.port,\n      pathname: `${this.base}${tempPath}${pathname}`,\n      query,\n    });\n    return decodeURIComponent(uri);\n  }\n\n  /**\n   * @typedef makeSprintQueryUriOptions\n   * @type {object}\n   * @property {string} pathname - The url after the /rest/api/version\n   * @property {object} query - a query object\n   * @property {string} intermediatePath - will overwrite the /rest/greenhopper/version section\n   */\n\n  /**\n   * @typedef makeDevStatusUri\n   * @function\n   * Creates a URI object for a given pathname\n   * @arg {pathname, query, intermediatePath} obj1\n   * @param {string} pathname obj1.pathname - The url after the /rest/api/version\n   * @param {object} query obj1.query - a query object\n   * @param {string} intermediatePath obj1.intermediatePath - If specified will overwrite the\n   * /rest/dev-status/latest/issue/detail section\n   */\n  makeDevStatusUri({ pathname, query, intermediatePath }) {\n    const intermediateToUse = this.intermediatePath || intermediatePath;\n    const tempPath = intermediateToUse || '/rest/dev-status/latest/issue';\n    const uri = url.format({\n      protocol: this.protocol,\n      hostname: this.host,\n      port: this.port,\n      pathname: `${this.base}${tempPath}${pathname}`,\n      query,\n    });\n    return decodeURIComponent(uri);\n  }\n\n  /**\n   * @name makeAgile1Uri\n   * @function\n   * Creates a URI object for a given pathname\n   * @param {UriOptions} object\n   */\n  makeAgileUri(object) {\n    const intermediateToUse = this.intermediatePath || object.intermediatePath;\n    const tempPath = intermediateToUse || '/rest/agile/1.0';\n    const uri = url.format({\n      protocol: this.protocol,\n      hostname: this.host,\n      port: this.port,\n      pathname: `${this.base}${tempPath}${object.pathname}`,\n      query: object.query,\n    });\n    return decodeURIComponent(uri);\n  }\n\n  /**\n   * @name doRequest\n   * @function\n   * Does a request based on the requestOptions object\n   * @param {object} requestOptions - fields on this object get posted as a request header for\n   * requests to jira\n   */\n  async doRequest(requestOptions) {\n    const options = {\n      ...this.baseOptions,\n      ...requestOptions,\n    };\n\n    const response = await this.request(options);\n\n    if (response) {\n      if (Array.isArray(response.errorMessages) && response.errorMessages.length > 0) {\n        throw new Error(response.errorMessages.join(', '));\n      }\n    }\n\n    return response;\n  }\n\n  /**\n   * @name findIssue\n   * @function\n   * Find an issue in jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290709)\n   * @param {string} issueNumber - The issue number to search for including the project key\n   * @param {string} expand - The resource expansion to return additional fields in the response\n   * @param {string} fields - Comma separated list of field ids or keys to retrieve\n   * @param {string} properties - Comma separated list of properties to retrieve\n   * @param {boolean} fieldsByKeys - False by default, used to retrieve fields by key instead of id\n   */\n  findIssue(issueNumber, expand, fields, properties, fieldsByKeys) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueNumber}`,\n      query: {\n        expand: expand || '',\n        fields: fields || '*all',\n        properties: properties || '*all',\n        fieldsByKeys: fieldsByKeys || false,\n      },\n    })));\n  }\n\n  /**\n   * @name downloadAttachment\n   * @function\n   * Download an attachment\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id288524)\n   * @param {object} attachment - the attachment\n   */\n  downloadAttachment(attachment) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/attachment/${attachment.id}/${attachment.filename}`,\n      intermediatePath: '/secure',\n      encode: true,\n    }), { json: false, encoding: null }));\n  }\n\n  /**\n   * @name deleteAttachment\n   * @function\n   * Remove the attachment\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-attachments/#api-rest-api-3-attachment-id-delete)\n   * @param {string} attachmentId - the attachment id\n   */\n  deleteAttachment(attachmentId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/attachment/${attachmentId}`,\n    }), { method: 'DELETE', json: false, encoding: null }));\n  }\n\n  /**\n   * @name getUnresolvedIssueCount\n   * @function\n   * Get the unresolved issue count\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id288524)\n   * @param {string} version - the version of your product you want to find the unresolved\n   * issues of.\n   */\n  async getUnresolvedIssueCount(version) {\n    const requestHeaders = this.makeRequestHeader(\n      this.makeUri({\n        pathname: `/version/${version}/unresolvedIssueCount`,\n      }),\n    );\n    const response = await this.doRequest(requestHeaders);\n    return response.issuesUnresolvedCount;\n  }\n\n  /**\n   * @name getProject\n   * @function\n   * Get the Project by project key\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id289232)\n   * @param {string} project - key for the project\n   */\n  getProject(project) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/project/${project}`,\n    })));\n  }\n\n  /**\n   * @name createProject\n   * @function\n   * Create a new Project\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/project-createProject)\n   * @param {object} project - with specs\n   */\n  createProject(project) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/project/',\n    }), {\n      method: 'POST',\n      body: project,\n    }));\n  }\n\n  /** Find the Rapid View for a specified project\n   * @name findRapidView\n   * @function\n   * @param {string} projectName - name for the project\n   */\n  async findRapidView(projectName) {\n    const response = await this.doRequest(this.makeRequestHeader(this.makeSprintQueryUri({\n      pathname: '/rapidviews/list',\n    })));\n\n    if (typeof projectName === 'undefined' || projectName === null) return response.views;\n\n    const rapidViewResult = response.views\n      .find((x) => x.name.toLowerCase() === projectName.toLowerCase());\n\n    return rapidViewResult;\n  }\n\n  /** Get the most recent sprint for a given rapidViewId\n   * @name getLastSprintForRapidView\n   * @function\n   * @param {string} rapidViewId - the id for the rapid view\n   */\n  async getLastSprintForRapidView(rapidViewId) {\n    const response = await this.doRequest(\n      this.makeRequestHeader(this.makeSprintQueryUri({\n        pathname: `/sprintquery/${rapidViewId}`,\n      })),\n    );\n    return response.sprints.pop();\n  }\n\n  /** Get the issues for a rapidView / sprint\n   * @name getSprintIssues\n   * @function\n   * @param {string} rapidViewId - the id for the rapid view\n   * @param {string} sprintId - the id for the sprint\n   */\n  getSprintIssues(rapidViewId, sprintId) {\n    return this.doRequest(this.makeRequestHeader(this.makeSprintQueryUri({\n      pathname: '/rapid/charts/sprintreport',\n      query: {\n        rapidViewId,\n        sprintId,\n      },\n    })));\n  }\n\n  /** Get a list of Sprints belonging to a Rapid View\n   * @name listSprints\n   * @function\n   * @param {string} rapidViewId - the id for the rapid view\n   */\n  listSprints(rapidViewId) {\n    return this.doRequest(this.makeRequestHeader(this.makeSprintQueryUri({\n      pathname: `/sprintquery/${rapidViewId}`,\n    })));\n  }\n\n  /** Add an issue to the project's current sprint\n   * @name addIssueToSprint\n   * @function\n   * @param {string} issueId - the id of the existing issue\n   * @param {string} sprintId - the id of the sprint to add it to\n   */\n  addIssueToSprint(issueId, sprintId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/sprint/${sprintId}/issues/add`,\n    }), {\n      method: 'PUT',\n      followAllRedirects: true,\n      body: {\n        issueKeys: [issueId],\n      },\n    }));\n  }\n\n  /** Create an issue link between two issues\n   * @name issueLink\n   * @function\n   * @param {object} link - a link object formatted how the Jira API specifies\n   */\n  issueLink(link) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/issueLink',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: link,\n    }));\n  }\n\n  /** List all issue link types jira knows about\n   * [Jira Doc](https://docs.atlassian.com/software/jira/docs/api/REST/8.5.0/#api/2/issueLinkType-getIssueLinkTypes)\n   * @name listIssueLinkTypes\n   * @function\n   */\n  listIssueLinkTypes() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/issueLinkType',\n    })));\n  }\n\n  /** Retrieves the remote links associated with the given issue.\n   * @name getRemoteLinks\n   * @function\n   * @param {string} issueNumber - the issue number to find remote links for.\n   */\n  getRemoteLinks(issueNumber) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueNumber}/remotelink`,\n    })));\n  }\n\n  /**\n   * @name createRemoteLink\n   * @function\n   * Creates a remote link associated with the given issue.\n   * @param {string} issueNumber - The issue number to create the remotelink under\n   * @param {object} remoteLink - the remotelink object as specified by the Jira API\n   */\n  createRemoteLink(issueNumber, remoteLink) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueNumber}/remotelink`,\n    }), {\n      method: 'POST',\n      body: remoteLink,\n    }));\n  }\n\n  /** Get Versions for a project\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id289653)\n   * @name getVersions\n   * @function\n   * @param {string} project - A project key to get versions for\n   */\n  getVersions(project) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/project/${project}/versions`,\n    })));\n  }\n\n  /** Get details of single Version in project\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/version-getVersion)\n   * @name getVersion\n   * @function\n   * @param {string} version - The id of this version\n   */\n  getVersion(version) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/version/${version}`,\n    })));\n  }\n\n  /** Create a version\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id288232)\n   * @name createVersion\n   * @function\n   * @param {object} version - an object of the new version\n   */\n  createVersion(version) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/version',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: version,\n    }));\n  }\n\n  /** Update a version\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#d2e510)\n   * @name updateVersion\n   * @function\n   * @param {object} version - an new object of the version to update\n   */\n  updateVersion(version) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/version/${version.id}`,\n    }), {\n      method: 'PUT',\n      followAllRedirects: true,\n      body: version,\n    }));\n  }\n\n  /** Delete a version\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/version-delete)\n   * @name deleteVersion\n   * @function\n   * @param {string} versionId - the ID of the version to delete\n   * @param {string} moveFixIssuesToId - when provided, existing fixVersions will be moved\n   *                 to this ID. Otherwise, the deleted version will be removed from all\n   *                 issue fixVersions.\n   * @param {string} moveAffectedIssuesToId - when provided, existing affectedVersions will\n   *                 be moved to this ID. Otherwise, the deleted version will be removed\n   *                 from all issue affectedVersions.\n   */\n  deleteVersion(versionId, moveFixIssuesToId, moveAffectedIssuesToId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/version/${versionId}`,\n    }), {\n      method: 'DELETE',\n      followAllRedirects: true,\n      qs: {\n        moveFixIssuesTo: moveFixIssuesToId,\n        moveAffectedIssuesTo: moveAffectedIssuesToId,\n      },\n    }));\n  }\n\n  /** Move version\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/version-moveVersion)\n   * @name moveVersion\n   * @function\n   * @param {string} versionId - the ID of the version to delete\n   * @param {string} position - an object of the new position\n   */\n\n  moveVersion(versionId, position) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/version/${versionId}/move`,\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: position,\n    }));\n  }\n\n  /** Pass a search query to Jira\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#d2e4424)\n   * @name searchJira\n   * @function\n   * @param {string} searchString - jira query string in JQL\n   * @param {object} optional - object containing any of the following properties\n   * @param {integer} [optional.startAt=0]: optional starting index number\n   * @param {integer} [optional.maxResults=50]: optional The maximum number of items to\n   *                  return per page. To manage page size, Jira may return fewer items per\n   *                  page where a large number of fields are requested.\n   * @param {array} [optional.fields]: optional array of string names of desired fields\n   * @param {array} [optional.expand]: optional array of string names of desired expand nodes\n   */\n  searchJira(searchString, optional = {}) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/search',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: {\n        jql: searchString,\n        ...optional,\n      },\n    }));\n  }\n\n  /** Create a Jira user\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/user-createUser)\n   * @name createUser\n   * @function\n   * @param {object} user - Properly Formatted User object\n   */\n  createUser(user) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/user',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: user,\n    }));\n  }\n\n  /** Search user on Jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#d2e3756)\n   * @name searchUsers\n   * @function\n   * @param {SearchUserOptions} options\n   */\n  searchUsers({\n    username, query, startAt, maxResults, includeActive, includeInactive,\n  }) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/user/search',\n      query: {\n        username,\n        query,\n        startAt: startAt || 0,\n        maxResults: maxResults || 50,\n        includeActive: includeActive || true,\n        includeInactive: includeInactive || false,\n      },\n    }), {\n      followAllRedirects: true,\n    }));\n  }\n\n  /**\n   * @typedef SearchUserOptions\n   * @type {object}\n   * @property {string} username - (DEPRECATED) A query string used to search username, name or\n   * e-mail address\n   * @property {string} query - A query string that is matched against user attributes\n   * (displayName, and emailAddress) to find relevant users. The string can match the prefix of\n   * the attribute's value. For example, query=john matches a user with a displayName of John\n   * Smith and a user with an emailAddress of johnson@example.com. Required, unless accountId\n   * or property is specified.\n   * @property {integer} [startAt=0] - The index of the first user to return (0-based)\n   * @property {integer} [maxResults=50] - The maximum number of users to return\n   * @property {boolean} [includeActive=true] - If true, then active users are included\n   * in the results\n   * @property {boolean} [includeInactive=false] - If true, then inactive users\n   * are included in the results\n   */\n\n  /** Get all users in group on Jira\n   * @name getUsersInGroup\n   * @function\n   * @param {string} groupname - A query string used to search users in group\n   * @param {integer} [startAt=0] - The index of the first user to return (0-based)\n   * @param {integer} [maxResults=50] - The maximum number of users to return (defaults to 50).\n   */\n  getUsersInGroup(groupname, startAt = 0, maxResults = 50) {\n    return this.doRequest(\n      this.makeRequestHeader(this.makeUri({\n        pathname: '/group',\n        query: {\n          groupname,\n          expand: `users[${startAt}:${maxResults}]`,\n        },\n      }), {\n        followAllRedirects: true,\n      }),\n    );\n  }\n\n  /** Get issues related to a user\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id296043)\n   * @name getUsersIssues\n   * @function\n   * @param {string} username - username of user to search for\n   * @param {boolean} open - determines if only open issues should be returned\n   */\n  getUsersIssues(username, open) {\n    const openJql = open ? ' AND status in (Open, \\'In Progress\\', Reopened)' : '';\n    return this.searchJira(\n      `assignee = ${username.replace('@', '\\\\u0040')}${openJql}`, {},\n    );\n  }\n\n  /** Returns a user.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-user-get)\n   * @name getUser\n   * @function\n   * @param {string} accountId - The accountId of user to search for\n   * @param {string} expand - The expand for additional info (groups,applicationRoles)\n   */\n  getUser(accountId, expand) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/user',\n      query: {\n        accountId,\n        expand,\n      },\n    })));\n  }\n\n  /** Returns a list of all (active and inactive) users.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-users-search-get)\n   * @name getUsers\n   * @function\n   * @param {integer} [startAt=0] - The index of the first user to return (0-based)\n   * @param {integer} [maxResults=50] - The maximum number of users to return (defaults to 50).\n   */\n  getUsers(startAt = 0, maxResults = 100) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/users',\n      query: {\n        startAt,\n        maxResults,\n      },\n    })));\n  }\n\n  /** Add issue to Jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290028)\n   * @name addNewIssue\n   * @function\n   * @param {object} issue - Properly Formatted Issue object\n   */\n  addNewIssue(issue) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/issue',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: issue,\n    }));\n  }\n\n  /** Add a user as a watcher on an issue\n   * @name addWatcher\n   * @function\n   * @param {string} issueKey - the key of the existing issue\n   * @param {string} username - the jira username to add as a watcher to the issue\n   */\n  addWatcher(issueKey, username) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueKey}/watchers`,\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: username,\n    }));\n  }\n\n  /** Change an assignee on an issue\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-assign)\n   * @name assignee\n   * @function\n   * @param {string} issueKey - the key of the existing issue\n   * @param {string} assigneeName - the jira username to add as a new assignee to the issue\n   */\n  updateAssignee(issueKey, assigneeName) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueKey}/assignee`,\n    }), {\n      method: 'PUT',\n      followAllRedirects: true,\n      body: { name: assigneeName },\n    }));\n  }\n\n  /** Change an assignee on an issue\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-issue-issueIdOrKey-assignee-put)\n   * @name updateAssigneeWithId\n   * @function\n   * @param {string} issueKey - the key of the existing issue\n   * @param {string} userId - the jira username to add as a new assignee to the issue\n   */\n  updateAssigneeWithId(issueKey, userId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueKey}/assignee`,\n    }), {\n      method: 'PUT',\n      followAllRedirects: true,\n      body: { accountId: userId },\n    }));\n  }\n\n  /** Delete issue from Jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290791)\n   * @name deleteIssue\n   * @function\n   * @param {string} issueId - the Id of the issue to delete\n   */\n  deleteIssue(issueId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}`,\n    }), {\n      method: 'DELETE',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** Update issue in Jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290878)\n   * @name updateIssue\n   * @function\n   * @param {string} issueId - the Id of the issue to update\n   * @param {object} issueUpdate - update Object as specified by the rest api\n   * @param {object} query - adds parameters to the query string\n   */\n  updateIssue(issueId, issueUpdate, query = {}) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}`,\n      query,\n    }), {\n      body: issueUpdate,\n      method: 'PUT',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** List Components\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)\n   * @name listComponents\n   * @function\n   * @param {string} project - key for the project\n   */\n  listComponents(project) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/project/${project}/components`,\n    })));\n  }\n\n  /** Add component to Jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290028)\n   * @name addNewComponent\n   * @function\n   * @param {object} component - Properly Formatted Component\n   */\n  addNewComponent(component) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/component',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: component,\n    }));\n  }\n\n  /** Update Jira component\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/component-updateComponent)\n   * @name updateComponent\n   * @function\n   * @param {string} componentId - the Id of the component to update\n   * @param {object} component - Properly Formatted Component\n   */\n  updateComponent(componentId, component) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/component/${componentId}`,\n    }), {\n      method: 'PUT',\n      followAllRedirects: true,\n      body: component,\n    }));\n  }\n\n  /** Delete component from Jira\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-api-2-component-id-delete)\n   * @name deleteComponent\n   * @function\n   * @param {string} id - The ID of the component.\n   * @param {string} moveIssuesTo - The ID of the component to replace the deleted component.\n   *                                If this value is null no replacement is made.\n   */\n  deleteComponent(id, moveIssuesTo) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/component/${id}`,\n    }), {\n      method: 'DELETE',\n      followAllRedirects: true,\n      qs: moveIssuesTo ? { moveIssuesTo } : null,\n    }));\n  }\n\n  /** Get count of issues assigned to the component.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-component-id-relatedIssueCounts-get)\n   * @name relatedIssueCounts\n   * @function\n   * @param {string} id - Component Id.\n   */\n  relatedIssueCounts(id) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/component/${id}/relatedIssueCounts`,\n    })));\n  }\n\n  /** Create custom Jira field\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field-createCustomField)\n   * @name createCustomField\n   * @function\n   * @param {object} field - Properly formatted Field object\n   */\n  createCustomField(field) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/field',\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: field,\n    }));\n  }\n\n  /** List all fields custom and not that jira knows about.\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)\n   * @name listFields\n   * @function\n   */\n  listFields() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/field',\n    })));\n  }\n\n  /** Add an option for a select list issue field.\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-createOption)\n   * @name createFieldOption\n   * @function\n   * @param {string} fieldKey - the key of the select list field\n   * @param {object} option - properly formatted Option object\n   */\n  createFieldOption(fieldKey, option) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/field/${fieldKey}/option`,\n    }), {\n      method: 'POST',\n      followAllRedirects: true,\n      body: option,\n    }));\n  }\n\n  /** Returns all options defined for a select list issue field.\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-getAllOptions)\n   * @name listFieldOptions\n   * @function\n   * @param {string} fieldKey - the key of the select list field\n   */\n  listFieldOptions(fieldKey) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/field/${fieldKey}/option`,\n    })));\n  }\n\n  /** Creates or updates an option for a select list issue field.\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-putOption)\n   * @name upsertFieldOption\n   * @function\n   * @param {string} fieldKey - the key of the select list field\n   * @param {string} optionId - the id of the modified option\n   * @param {object} option - properly formatted Option object\n   */\n  upsertFieldOption(fieldKey, optionId, option) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/field/${fieldKey}/option/${optionId}`,\n    }), {\n      method: 'PUT',\n      followAllRedirects: true,\n      body: option,\n    }));\n  }\n\n  /** Returns an option for a select list issue field.\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-getOption)\n   * @name getFieldOption\n   * @function\n   * @param {string} fieldKey - the key of the select list field\n   * @param {string} optionId - the id of the option\n   */\n  getFieldOption(fieldKey, optionId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/field/${fieldKey}/option/${optionId}`,\n    })));\n  }\n\n  /** Deletes an option from a select list issue field.\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-delete)\n   * @name deleteFieldOption\n   * @function\n   * @param {string} fieldKey - the key of the select list field\n   * @param {string} optionId - the id of the deleted option\n   */\n  deleteFieldOption(fieldKey, optionId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/field/${fieldKey}/option/${optionId}`,\n    }), {\n      method: 'DELETE',\n      followAllRedirects: true,\n    }));\n  }\n\n  /**\n   * @name getIssueProperty\n   * @function\n   * Get Property of Issue by Issue and Property Id\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/properties-getProperty)\n   * @param {string} issueNumber - The issue number to search for including the project key\n   * @param {string} property - The property key to search for\n   */\n  getIssueProperty(issueNumber, property) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueNumber}/properties/${property}`,\n    })));\n  }\n\n  /**\n   * @name getIssueChangelog\n   * @function\n   * List all changes for an issue, sorted by date, starting from the latest\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/changelog)\n   * @param {string} issueNumber - The issue number to search for including the project key\n   * @param {integer} [startAt=0] - optional starting index number\n   * @param {integer} [maxResults=50] - optional ending index number\n   */\n  getIssueChangelog(issueNumber, startAt = 0, maxResults = 50) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueNumber}/changelog`,\n      query: {\n        startAt,\n        maxResults,\n      },\n    })));\n  }\n\n  /**\n   * @name getIssueWatchers\n   * @function\n   * List all watchers for an issue\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getIssueWatchers)\n   * @param {string} issueNumber - The issue number to search for including the project key\n   */\n  getIssueWatchers(issueNumber) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueNumber}/watchers`,\n    })));\n  }\n\n  /** List all priorities jira knows about\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)\n   * @name listPriorities\n   * @function\n   */\n  listPriorities() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/priority',\n    })));\n  }\n\n  /** List Transitions for a specific issue that are available to the current user\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)\n   * @name listTransitions\n   * @function\n   * @param {string} issueId - get transitions available for the issue\n   */\n  listTransitions(issueId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/transitions`,\n      query: {\n        expand: 'transitions.fields',\n      },\n    })));\n  }\n\n  /** Transition issue in Jira\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)\n   * @name transitionsIssue\n   * @function\n   * @param {string} issueId - the Id of the issue to delete\n   * @param {object} issueTransition - transition object from the jira rest API\n   */\n  transitionIssue(issueId, issueTransition) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/transitions`,\n    }), {\n      body: issueTransition,\n      method: 'POST',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** List all Viewable Projects\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id289193)\n   * @name listProjects\n   * @function\n   */\n  listProjects() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/project',\n    })));\n  }\n\n  /** Add a comment to an issue\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#id108798)\n   * @name addComment\n   * @function\n   * @param {string} issueId - Issue to add a comment to\n   * @param {string} comment - string containing comment\n   */\n  addComment(issueId, comment) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/comment`,\n    }), {\n      body: {\n        body: comment,\n      },\n      method: 'POST',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** Add a comment to an issue, supports full comment object\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#id108798)\n   * @name addCommentAdvanced\n   * @function\n   * @param {string} issueId - Issue to add a comment to\n   * @param {object} comment - The object containing your comment data\n   */\n  addCommentAdvanced(issueId, comment) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/comment`,\n    }), {\n      body: comment,\n      method: 'POST',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** Update comment for an issue\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-updateComment)\n   * @name updateComment\n   * @function\n   * @param {string} issueId - Issue with the comment\n   * @param {string} commentId - Comment that is updated\n   * @param {string} comment - string containing new comment\n   * @param {object} [options={}] - extra options\n   */\n  updateComment(issueId, commentId, comment, options = {}) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/comment/${commentId}`,\n    }), {\n      body: {\n        body: comment,\n        ...options,\n      },\n      method: 'PUT',\n      followAllRedirects: true,\n    }));\n  }\n\n  /**\n   * @name getComments\n   * @function\n   * Get Comments by IssueId.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-comment-list-post)\n   * @param {string} issueId - this issue this comment is on\n   */\n  getComments(issueId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/comment`,\n    })));\n  }\n\n  /**\n   * @name getComment\n   * @function\n   * Get Comment by Id.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-comment-list-post)\n   * @param {string} issueId - this issue this comment is on\n   * @param {number} commentId - the id of the comment\n   */\n  getComment(issueId, commentId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/comment/${commentId}`,\n    })));\n  }\n\n  /**\n   * @name deleteComment\n   * @function\n   * Delete Comments by Id.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-comment-list-post)\n   * @param {string} issueId - this issue this comment is on\n   * @param {number} commentId - the id of the comment\n   */\n  deleteComment(issueId, commentId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/comment/${commentId}`,\n    }), {\n      method: 'DELETE',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** Add a worklog to a project\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id291617)\n   * @name addWorklog\n   * @function\n   * @param {string} issueId - Issue to add a worklog to\n   * @param {object} worklog - worklog object from the rest API\n   * @param {object} newEstimate - the new value for the remaining estimate field\n   * @param {object} [options={}] - extra options\n   */\n  addWorklog(issueId, worklog, newEstimate = null, options = {}) {\n    const query = {\n      adjustEstimate: newEstimate ? 'new' : 'auto',\n      ...newEstimate ? { newEstimate } : {},\n      ...options,\n    };\n\n    const header = {\n      uri: this.makeUri({\n        pathname: `/issue/${issueId}/worklog`,\n        query,\n      }),\n      body: worklog,\n      method: 'POST',\n      'Content-Type': 'application/json',\n      json: true,\n    };\n\n    return this.doRequest(header);\n  }\n\n  /** Get ids of worklogs modified since\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/worklog-getWorklogsForIds)\n   * @name updatedWorklogs\n   * @function\n   * @param {number} since - a date time in unix timestamp format since when updated worklogs\n   * will be returned.\n   * @param {string} expand - ptional comma separated list of parameters to expand: properties\n   * (provides worklog properties).\n   */\n  updatedWorklogs(since, expand) {\n    const header = {\n      uri: this.makeUri({\n        pathname: '/worklog/updated',\n        query: { since, expand },\n      }),\n      method: 'GET',\n      'Content-Type': 'application/json',\n      json: true,\n    };\n\n    return this.doRequest(header);\n  }\n\n  /** Delete worklog from issue\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#d2e1673)\n   * @name deleteWorklog\n   * @function\n   * @param {string} issueId - the Id of the issue to delete\n   * @param {string} worklogId - the Id of the worklog in issue to delete\n   */\n  deleteWorklog(issueId, worklogId) {\n    return this.doRequest(this.makeRequestHeader(\n      this.makeUri({\n        pathname: `/issue/${issueId}/worklog/${worklogId}`,\n      }), {\n        method: 'DELETE',\n        followAllRedirects: true,\n      },\n    ));\n  }\n\n  /** Deletes an issue link.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-issueLink-linkId-delete)\n   * @name deleteIssueLink\n   * @function\n   * @param {string} linkId - the Id of the issue link to delete\n   */\n  deleteIssueLink(linkId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issueLink/${linkId}`,\n    }), {\n      method: 'DELETE',\n      followAllRedirects: true,\n    }));\n  }\n\n  /** Returns worklog details for a list of worklog IDs.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-worklog-list-post)\n   * @name getWorklogs\n   * @function\n   * @param {array} worklogsIDs - a list of worklog IDs.\n   * @param {string} expand - expand to include additional information about worklogs\n   *\n   */\n  getWorklogs(worklogsIDs, expand) {\n    return this.doRequest(this.makeRequestHeader(\n      this.makeUri({\n        pathname: '/worklog/list',\n        query: {\n          expand,\n        },\n      }), {\n        method: 'POST',\n        body: {\n          ids: worklogsIDs,\n        },\n      },\n    ));\n  }\n\n  /** Get worklogs list from a given issue\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-worklog-get)\n   * @name getIssueWorklogs\n   * @function\n   * @param {string} issueId - the Id of the issue to find worklogs for\n   * @param {integer} [startAt=0] - optional starting index number\n   * @param {integer} [maxResults=1000] - optional ending index number\n   */\n  getIssueWorklogs(issueId, startAt = 0, maxResults = 1000) {\n    return this.doRequest(this.makeRequestHeader(\n      this.makeUri({\n        pathname: `/issue/${issueId}/worklog`,\n        query: {\n          startAt,\n          maxResults,\n        },\n      }),\n    ));\n  }\n\n  /** List all Issue Types jira knows about\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id295946)\n   * @name listIssueTypes\n   * @function\n   */\n  listIssueTypes() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/issuetype',\n    })));\n  }\n\n  /** Register a webhook\n   * [Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)\n   * @name registerWebhook\n   * @function\n   * @param {object} webhook - properly formatted webhook\n   */\n  registerWebhook(webhook) {\n    return this.doRequest(this.makeRequestHeader(this.makeWebhookUri({\n      pathname: '/webhook',\n    }), {\n      method: 'POST',\n      body: webhook,\n    }));\n  }\n\n  /** List all registered webhooks\n   * [Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)\n   * @name listWebhooks\n   * @function\n   */\n  listWebhooks() {\n    return this.doRequest(this.makeRequestHeader(this.makeWebhookUri({\n      pathname: '/webhook',\n    })));\n  }\n\n  /** Get a webhook by its ID\n   * [Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)\n   * @name getWebhook\n   * @function\n   * @param {string} webhookID - id of webhook to get\n   */\n  getWebhook(webhookID) {\n    return this.doRequest(this.makeRequestHeader(this.makeWebhookUri({\n      pathname: `/webhook/${webhookID}`,\n    })));\n  }\n\n  /** Delete a registered webhook\n   * [Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)\n   * @name issueLink\n   * @function\n   * @param {string} webhookID - id of the webhook to delete\n   */\n  deleteWebhook(webhookID) {\n    return this.doRequest(this.makeRequestHeader(this.makeWebhookUri({\n      pathname: `/webhook/${webhookID}`,\n    }), {\n      method: 'DELETE',\n    }));\n  }\n\n  /** Describe the currently authenticated user\n   * [Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id2e865)\n   * @name getCurrentUser\n   * @function\n   */\n  getCurrentUser() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/myself',\n    })));\n  }\n\n  /** Retrieve the backlog of a certain Rapid View\n   * @name getBacklogForRapidView\n   * @function\n   * @param {string} rapidViewId - rapid view id\n   */\n  getBacklogForRapidView(rapidViewId) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/xboard/plan/backlog/data',\n      query: {\n        rapidViewId,\n      },\n    })));\n  }\n\n  /** Add attachment to a Issue\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/issue/{issueIdOrKey}/attachments-addAttachment)\n   * @name addAttachmentOnIssue\n   * @function\n   * @param {string} issueId - issue id\n   * @param {object} readStream - readStream object from fs\n   */\n  addAttachmentOnIssue(issueId, readStream) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/attachments`,\n    }), {\n      method: 'POST',\n      headers: {\n        'X-Atlassian-Token': 'nocheck',\n      },\n      formData: {\n        file: readStream,\n      },\n    }));\n  }\n\n  /** Notify people related to issue\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-notify)\n   * @name issueNotify\n   * @function\n   * @param {string} issueId - issue id\n   * @param {object} notificationBody - properly formatted body\n   */\n  issueNotify(issueId, notificationBody) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/issue/${issueId}/notify`,\n    }), {\n      method: 'POST',\n      body: notificationBody,\n    }));\n  }\n\n  /** Get list of possible statuses\n   * [Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/status-getStatuses)\n   * @name listStatus\n   * @function\n   */\n  listStatus() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/status',\n    })));\n  }\n\n  /** Get a Dev-Status summary by issue ID\n   * @name getDevStatusSummary\n   * @function\n   * @param {string} issueId - id of issue to get\n   */\n  getDevStatusSummary(issueId) {\n    return this.doRequest(this.makeRequestHeader(this.makeDevStatusUri({\n      pathname: '/summary',\n      query: {\n        issueId,\n      },\n    })));\n  }\n\n  /** Get a Dev-Status detail by issue ID\n   * @name getDevStatusDetail\n   * @function\n   * @param {string} issueId - id of issue to get\n   * @param {string} applicationType - type of application (stash, bitbucket)\n   * @param {string} dataType - info to return (repository, pullrequest)\n   */\n  getDevStatusDetail(issueId, applicationType, dataType) {\n    return this.doRequest(this.makeRequestHeader(this.makeDevStatusUri({\n      pathname: '/detail',\n      query: {\n        issueId,\n        applicationType,\n        dataType,\n      },\n    })));\n  }\n\n  /** Get issue\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-getIssue)\n   * @name getIssue\n   * @function\n   * @param {string} issueIdOrKey - Id of issue\n   * @param {string} [fields] - The list of fields to return for each issue.\n   * @param {string} [expand] - A comma-separated list of the parameters to expand.\n   */\n  getIssue(issueIdOrKey, fields, expand) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/issue/${issueIdOrKey}`,\n      query: {\n        fields,\n        expand,\n      },\n    })));\n  }\n\n  /** Move issues to backlog\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/backlog-moveIssuesToBacklog)\n   * @name moveToBacklog\n   * @function\n   * @param {array} issues - id or key of issues to get\n   */\n  moveToBacklog(issues) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: '/backlog/issue',\n    }), {\n      method: 'POST',\n      body: {\n        issues,\n      },\n    }));\n  }\n\n  /** Get all boards\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getAllBoards)\n   * @name getAllBoards\n   * @function\n   * @param {number} [startAt=0] - The starting index of the returned boards.\n   * @param {number} [maxResults=50] - The maximum number of boards to return per page.\n   * @param {string} [type] - Filters results to boards of the specified type.\n   * @param {string} [name] - Filters results to boards that match the specified name.\n   * @param {string} [projectKeyOrId] - Filters results to boards that are relevant to a project.\n   */\n  getAllBoards(startAt = 0, maxResults = 50, type, name, projectKeyOrId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: '/board',\n      query: {\n        startAt,\n        maxResults,\n        type,\n        name,\n        ...projectKeyOrId && { projectKeyOrId },\n      },\n    })));\n  }\n\n  /** Create Board\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-createBoard)\n   * @name createBoard\n   * @function\n   * @param {object} boardBody - Board name, type and filter Id is required.\n   * @param {string} boardBody.type - Valid values: scrum, kanban\n   * @param {string} boardBody.name - Must be less than 255 characters.\n   * @param {string} boardBody.filterId - Id of a filter that the user has permissions to view.\n   */\n  createBoard(boardBody) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: '/board',\n    }), {\n      method: 'POST',\n      body: boardBody,\n    }));\n  }\n\n  /** Get Board\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getBoard)\n   * @name getBoard\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   */\n  getBoard(boardId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}`,\n    })));\n  }\n\n  /** Delete Board\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-deleteBoard)\n   * @name deleteBoard\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   */\n  deleteBoard(boardId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}`,\n    }), {\n      method: 'DELETE',\n    }));\n  }\n\n  /** Get issues for backlog\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getIssuesForBacklog)\n   * @name getIssuesForBacklog\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned issues. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of issues to return per page. Default: 50.\n   * @param {string} [jql] - Filters results using a JQL query.\n   * @param {boolean} [validateQuery] - Specifies whether to validate the JQL query or not.\n   * Default: true.\n   * @param {string} [fields] - The list of fields to return for each issue.\n   */\n  getIssuesForBacklog(boardId, startAt = 0, maxResults = 50, jql, validateQuery = true, fields) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/backlog`,\n      query: {\n        startAt,\n        maxResults,\n        jql,\n        validateQuery,\n        fields,\n      },\n    })));\n  }\n\n  /** Get Configuration\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getConfiguration)\n   * @name getConfiguration\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   */\n  getConfiguration(boardId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/configuration`,\n    })));\n  }\n\n  /** Get issues for board\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getIssuesForBoard)\n   * @name getIssuesForBoard\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned issues. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of issues to return per page. Default: 50.\n   * @param {string} [jql] - Filters results using a JQL query.\n   * @param {boolean} [validateQuery] - Specifies whether to validate the JQL query or not.\n   * Default: true.\n   * @param {string} [fields] - The list of fields to return for each issue.\n   */\n  getIssuesForBoard(boardId, startAt = 0, maxResults = 50, jql, validateQuery = true, fields) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/issue`,\n      query: {\n        startAt,\n        maxResults,\n        jql,\n        validateQuery,\n        fields,\n      },\n    })));\n  }\n\n  /** Get issue estimation for board\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-getIssueEstimationForBoard)\n   * @name getIssueEstimationForBoard\n   * @function\n   * @param {string} issueIdOrKey - Id of issue\n   * @param {number} boardId - The id of the board required to determine which field\n   * is used for estimation.\n   */\n  getIssueEstimationForBoard(issueIdOrKey, boardId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/issue/${issueIdOrKey}/estimation`,\n      query: {\n        boardId,\n      },\n    })));\n  }\n\n  /** Get Epics\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/epic-getEpics)\n   * @name getEpics\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned epics. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of epics to return per page. Default: 50.\n   * @param {string} [done] - Filters results to epics that are either done or not done.\n   * Valid values: true, false.\n   */\n  getEpics(boardId, startAt = 0, maxResults = 50, done) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/epic`,\n      query: {\n        startAt,\n        maxResults,\n        done,\n      },\n    })));\n  }\n\n  /** Get board issues for epic\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/epic-getIssuesForEpic)\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/epic-getIssuesWithoutEpic)\n   * @name getBoardIssuesForEpic\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {string} epicId - Id of epic to retrieve, specify 'none' to get issues without an epic.\n   * @param {number} [startAt=0] - The starting index of the returned issues. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of issues to return per page. Default: 50.\n   * @param {string} [jql] - Filters results using a JQL query.\n   * @param {boolean} [validateQuery] - Specifies whether to validate the JQL query or not.\n   * Default: true.\n   * @param {string} [fields] - The list of fields to return for each issue.\n   */\n  getBoardIssuesForEpic(boardId, epicId, startAt = 0, maxResults = 50, jql,\n    validateQuery = true, fields) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/epic/${epicId}/issue`,\n      query: {\n        startAt,\n        maxResults,\n        jql,\n        validateQuery,\n        fields,\n      },\n    })));\n  }\n\n  /** Estimate issue for board\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-estimateIssueForBoard)\n   * @name estimateIssueForBoard\n   * @function\n   * @param {string} issueIdOrKey - Id of issue\n   * @param {number} boardId - The id of the board required to determine which field\n   * is used for estimation.\n   * @param {string} body - value to set\n   */\n  estimateIssueForBoard(issueIdOrKey, boardId, body) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/issue/${issueIdOrKey}/estimation`,\n      query: {\n        boardId,\n      },\n    }), {\n      method: 'PUT',\n      body,\n    }));\n  }\n\n  /** Rank Issues\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-rankIssues)\n   * @name rankIssues\n   * @function\n   * @param {string} body - value to set\n   */\n  rankIssues(body) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: '/issue/rank',\n    }), {\n      method: 'PUT',\n      body,\n    }));\n  }\n\n  /** Get Projects\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/project-getProjects)\n   * @name getProjects\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned projects. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of projects to return per page.\n   * Default: 50.\n   */\n  getProjects(boardId, startAt = 0, maxResults = 50) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/project`,\n      query: {\n        startAt,\n        maxResults,\n      },\n    })));\n  }\n\n  /** Get Projects Full\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/project-getProjectsFull)\n   * @name getProjectsFull\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   */\n  getProjectsFull(boardId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/project/full`,\n    })));\n  }\n\n  /** Get Board Properties Keys\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-getPropertiesKeys)\n   * @name getBoardPropertiesKeys\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   */\n  getBoardPropertiesKeys(boardId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/properties`,\n    })));\n  }\n\n  /** Delete Board Property\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-deleteProperty)\n   * @name deleteBoardProperty\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {string} propertyKey - Id of property to delete\n   */\n  deleteBoardProperty(boardId, propertyKey) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/properties/${propertyKey}`,\n    }), {\n      method: 'DELETE',\n    }));\n  }\n\n  /** Set Board Property\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-setProperty)\n   * @name setBoardProperty\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {string} propertyKey - Id of property to delete\n   * @param {string} body - value to set, for objects make sure to stringify first\n   */\n  setBoardProperty(boardId, propertyKey, body) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/properties/${propertyKey}`,\n    }), {\n      method: 'PUT',\n      body,\n    }));\n  }\n\n  /** Get Board Property\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-getProperty)\n   * @name getBoardProperty\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {string} propertyKey - Id of property to retrieve\n   */\n  getBoardProperty(boardId, propertyKey) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/properties/${propertyKey}`,\n    })));\n  }\n\n  /** Get All Sprints\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/sprint-getAllSprints)\n   * @name getAllSprints\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned sprints. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of sprints to return per page.\n   * Default: 50.\n   * @param {string} [state] - Filters results to sprints in specified states.\n   * Valid values: future, active, closed.\n   */\n  getAllSprints(boardId, startAt = 0, maxResults = 50, state) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/sprint`,\n      query: {\n        startAt,\n        maxResults,\n        state,\n      },\n    })));\n  }\n\n  /** Get Board issues for sprint\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/sprint-getIssuesForSprint)\n   * @name getBoardIssuesForSprint\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {string} sprintId - Id of sprint to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned issues. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of issues to return per page. Default: 50.\n   * @param {string} [jql] - Filters results using a JQL query.\n   * @param {boolean} [validateQuery] - Specifies whether to validate the JQL query or not.\n   * Default: true.\n   * @param {string} [fields] - The list of fields to return for each issue.\n   * @param {string} [fields] - The list of fields to return for each issue.\n   */\n  getBoardIssuesForSprint(boardId, sprintId, startAt = 0, maxResults = 50, jql,\n    validateQuery = true, fields, expand) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/sprint/${sprintId}/issue`,\n      query: {\n        startAt,\n        maxResults,\n        jql,\n        validateQuery,\n        fields,\n        expand,\n      },\n    })));\n  }\n\n  /** Get All Versions\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/version-getAllVersions)\n   * @name getAllVersions\n   * @function\n   * @param {string} boardId - Id of board to retrieve\n   * @param {number} [startAt=0] - The starting index of the returned versions. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of versions to return per page.\n   * Default: 50.\n   * @param {string} [released] - Filters results to versions that are either released or\n   * unreleased.Valid values: true, false.\n   */\n  getAllVersions(boardId, startAt = 0, maxResults = 50, released) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/board/${boardId}/version`,\n      query: {\n        startAt,\n        maxResults,\n        released,\n      },\n    })));\n  }\n\n  /** Get Filter\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/filter)\n   * @name getFilter\n   * @function\n   * @param {string} filterId - Id of filter to retrieve\n   */\n\n  getFilter(filterId) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/filter/${filterId}`,\n    })));\n  }\n\n  /** Get Epic\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-getEpic)\n   * @name getEpic\n   * @function\n   * @param {string} epicIdOrKey - Id of epic to retrieve\n   */\n  getEpic(epicIdOrKey) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/epic/${epicIdOrKey}`,\n    })));\n  }\n\n  /** Partially update epic\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-partiallyUpdateEpic)\n   * @name partiallyUpdateEpic\n   * @function\n   * @param {string} epicIdOrKey - Id of epic to retrieve\n   * @param {string} body - value to set, for objects make sure to stringify first\n   */\n  partiallyUpdateEpic(epicIdOrKey, body) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/epic/${epicIdOrKey}`,\n    }), {\n      method: 'POST',\n      body,\n    }));\n  }\n\n  /** Get issues for epic\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-getIssuesForEpic)\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-getIssuesWithoutEpic)\n   * @name getIssuesForEpic\n   * @function\n   * @param {string} epicId - Id of epic to retrieve, specify 'none' to get issues without an epic.\n   * @param {number} [startAt=0] - The starting index of the returned issues. Base index: 0.\n   * @param {number} [maxResults=50] - The maximum number of issues to return per page. Default: 50.\n   * @param {string} [jql] - Filters results using a JQL query.\n   * @param {boolean} [validateQuery] - Specifies whether to validate the JQL query or not.\n   * Default: true.\n   * @param {string} [fields] - The list of fields to return for each issue.\n   */\n  getIssuesForEpic(epicId, startAt = 0, maxResults = 50, jql,\n    validateQuery = true, fields) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/epic/${epicId}/issue`,\n      query: {\n        startAt,\n        maxResults,\n        jql,\n        validateQuery,\n        fields,\n      },\n    })));\n  }\n\n  /** Move Issues to Epic\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-moveIssuesToEpic)\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-removeIssuesFromEpic)\n   * @name moveIssuesToEpic\n   * @function\n   * @param {string} epicIdOrKey - Id of epic to move issue to, or 'none' to remove from epic\n   * @param {array} issues - array of issues to move\n   */\n  moveIssuesToEpic(epicIdOrKey, issues) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/epic/${epicIdOrKey}/issue`,\n    }), {\n      method: 'POST',\n      body: {\n        issues,\n      },\n    }));\n  }\n\n  /** Rank Epics\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-rankEpics)\n   * @name rankEpics\n   * @function\n   * @param {string} epicIdOrKey - Id of epic\n   * @param {string} body - value to set\n   */\n  rankEpics(epicIdOrKey, body) {\n    return this.doRequest(this.makeRequestHeader(this.makeAgileUri({\n      pathname: `/epic/${epicIdOrKey}/rank`,\n    }), {\n      method: 'PUT',\n      body,\n    }));\n  }\n\n  /**\n   * @name getServerInfo\n   * @function\n   * Get server info\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-api-2-serverInfo-get)\n   */\n  getServerInfo() {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/serverInfo',\n    })));\n  }\n\n  /**\n   * @name getIssueCreateMetadata\n   * @param {object} optional - object containing any of the following properties\n   * @param {array} [optional.projectIds]: optional Array of project ids to return metadata for\n   * @param {array} [optional.projectKeys]: optional Array of project keys to return metadata for\n   * @param {array} [optional.issuetypeIds]: optional Array of issuetype ids to return metadata for\n   * @param {array} [optional.issuetypeNames]: optional Array of issuetype names to return metadata\n   * for\n   * @param {string} [optional.expand]: optional Include additional information about issue\n   * metadata. Valid value is 'projects.issuetypes.fields'\n   * Get metadata for creating an issue.\n   * [Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-rest-api-3-issue-createmeta-get)\n   */\n  getIssueCreateMetadata(optional = {}) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: '/issue/createmeta',\n      query: optional,\n    })));\n  }\n\n  /** Generic Get Request\n   * [Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/2/)\n   * @name genericGet\n   * @function\n   * @param {string} endpoint - Rest API endpoint\n   */\n  genericGet(endpoint) {\n    return this.doRequest(this.makeRequestHeader(this.makeUri({\n      pathname: `/${endpoint}`,\n    })));\n  }\n}\n",
    "static": true,
    "longname": "/Users/piou/Dev/node-jira-client/src/jira.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "JiraApi",
    "memberof": "src/jira.js",
    "static": true,
    "longname": "src/jira.js~JiraApi",
    "access": "public",
    "export": true,
    "importPath": "jira-client/src/jira.js",
    "importStyle": "JiraApi",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Wrapper for the JIRA Rest Api\nhttps://docs.atlassian.com/jira/REST/6.4.8/"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      },
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "JiraApiOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "protocol",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#protocol",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "host",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#host",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "port",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#port",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "apiVersion",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#apiVersion",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "base",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#base",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "intermediatePath",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#intermediatePath",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "strictSSL",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#strictSSL",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "request",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#request",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "webhookVersion",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#webhookVersion",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "greenhopperVersion",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#greenhopperVersion",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "baseOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#baseOptions",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "typedef",
    "name": "JiraApiOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.JiraApiOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "http",
        "defaultRaw": "http",
        "name": "protocol",
        "description": "What protocol to use to connect to\njira? Ex: http|https"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "host",
        "description": "What host is this tool connecting to for the jira\ninstance? Ex: jira.somehost.com"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "port",
        "description": "What port is this tool connecting to jira with? Only needed for\nnone standard ports. Ex: 8080, 3000, etc"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "username",
        "description": "Specify a username for this tool to authenticate all\nrequests with."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "password",
        "description": "Specify a password for this tool to authenticate all\nrequests with. Cloud users need to generate an [API token](https://confluence.atlassian.com/cloud/api-tokens-938839638.html) for this value."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "2",
        "defaultRaw": 2,
        "name": "apiVersion",
        "description": "What version of the jira rest api is the instance the\ntool is connecting to?"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "base",
        "description": "What other url parts exist, if any, before the rest/api/\nsection?"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "intermediatePath",
        "description": "If specified, overwrites the default rest/api/version\nsection of the uri"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "strictSSL",
        "description": "Does this tool require each request to be\nauthenticated?  Defaults to true."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "request",
        "description": "What method does this tool use to make its requests?\nDefaults to request from request-promise"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "timeout",
        "description": "Integer containing the number of milliseconds to wait for a\nserver to send response headers (and start the response body) before aborting the request. Note\nthat if the underlying TCP connection cannot be established, the OS-wide TCP connection timeout\nwill overrule the timeout option ([the default in Linux can be anywhere from 20-120 *\nseconds](http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout))."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1.0",
        "defaultRaw": 1,
        "name": "webhookVersion",
        "description": "What webhook version does this api wrapper need to\nhit?"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1.0",
        "defaultRaw": 1,
        "name": "greenhopperVersion",
        "description": "What webhook version does this api wrapper need\nto hit?"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "ca",
        "description": "Specify a CA certificate"
      },
      {
        "nullable": null,
        "types": [
          "OAuth"
        ],
        "spread": false,
        "optional": true,
        "name": "oauth",
        "description": "Specify an OAuth object for this tool to authenticate all requests\nusing OAuth."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "bearer",
        "description": "Specify an OAuth bearer token to authenticate all requests with."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "JiraApiOptions"
    }
  },
  {
    "__docId__": 63,
    "kind": "typedef",
    "name": "OAuth",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.OAuth",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "consumer_key",
        "description": "The consumer entered in Jira Preferences."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "consumer_secret",
        "description": "The private RSA file."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "access_token",
        "description": "The generated access token."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "access_token_secret",
        "description": "The generated access toke secret."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "signature_method",
        "description": "[signature_method=RSA-SHA1] - OAuth signurate methode\nPossible values RSA-SHA1, HMAC-SHA1, PLAINTEXT. Jira Cloud supports only RSA-SHA1."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "OAuth"
    }
  },
  {
    "__docId__": 64,
    "kind": "typedef",
    "name": "UriOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.UriOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": "The url after the specific functions path"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "An object of all query parameters"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "intermediatePath",
        "description": "Overwrites with specified path"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "UriOptions"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "makeRequestHeader",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#makeRequestHeader",
    "access": "public",
    "description": "",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a requestOptions object based on the default template for one"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "an object containing fields and formatting how the"
      }
    ],
    "return": {
      "types": [
        "{\"rejectUnauthorized\": *, \"method\": *, \"uri\": *, \"json\": boolean, ...options: Object}"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "typedef",
    "name": "makeRequestHeaderOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.makeRequestHeaderOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "method",
        "description": "HTTP Request Method. ie GET, POST, PUT, DELETE"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "makeRequestHeaderOptions"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "makeUri",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#makeUri",
    "access": "public",
    "description": "",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a URI object for a given pathname"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "an object containing path information"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "typedef",
    "name": "makeUriOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.makeUriOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": "The url after the /rest/api/version"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "a query object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "intermediatePath",
        "description": "If specified will overwrite the /rest/api/version section"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "makeUriOptions"
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "makeWebhookUri",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#makeWebhookUri",
    "access": "public",
    "description": "",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a URI object for a given pathName"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An options object specifying uri information"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "typedef",
    "name": "makeWebhookUriOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.makeWebhookUriOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": "The url after the /rest/webhooks"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "intermediatePath",
        "description": "If specified will overwrite the /rest/webhooks section"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "makeWebhookUriOptions"
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "makeSprintQueryUri",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#makeSprintQueryUri",
    "access": "public",
    "description": "",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a URI object for a given pathName"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The url after the /rest/"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "typedef",
    "name": "makeSprintQueryUriOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.makeSprintQueryUriOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": "The url after the /rest/api/version"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "a query object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "intermediatePath",
        "description": "will overwrite the /rest/greenhopper/version section"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "makeSprintQueryUriOptions"
    }
  },
  {
    "__docId__": 73,
    "kind": "typedef",
    "name": "makeDevStatusUri",
    "memberof": "src/jira.js~JiraApi",
    "static": false,
    "longname": "src/jira.js~JiraApi#makeDevStatusUri",
    "access": "public",
    "description": "",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a URI object for a given pathname"
      },
      {
        "tagName": "@arg",
        "tagValue": "{pathname, query, intermediatePath} obj1"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": "obj1.pathname - The url after the /rest/api/version"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "obj1.query - a query object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "intermediatePath",
        "description": "obj1.intermediatePath - If specified will overwrite the\n/rest/dev-status/latest/issue/detail section"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "makeDevStatusUri"
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "makeAgileUri",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#makeAgileUri",
    "access": "public",
    "description": "",
    "lineNumber": 250,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a URI object for a given pathname"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UriOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "doRequest",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/jira.js~JiraApi#doRequest",
    "access": "public",
    "description": "",
    "lineNumber": 270,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Does a request based on the requestOptions object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions",
        "description": "fields on this object get posted as a request header for\nrequests to jira"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "findIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#findIssue",
    "access": "public",
    "description": "",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Find an issue in jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290709)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueNumber",
        "description": "The issue number to search for including the project key"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "expand",
        "description": "The resource expansion to return additional fields in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fields",
        "description": "Comma separated list of field ids or keys to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "Comma separated list of properties to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldsByKeys",
        "description": "False by default, used to retrieve fields by key instead of id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "downloadAttachment",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#downloadAttachment",
    "access": "public",
    "description": "",
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Download an attachment\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id288524)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attachment",
        "description": "the attachment"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "deleteAttachment",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteAttachment",
    "access": "public",
    "description": "",
    "lineNumber": 332,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Remove the attachment\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-attachments/#api-rest-api-3-attachment-id-delete)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attachmentId",
        "description": "the attachment id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getUnresolvedIssueCount",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/jira.js~JiraApi#getUnresolvedIssueCount",
    "access": "public",
    "description": "",
    "lineNumber": 346,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Get the unresolved issue count\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id288524)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "the version of your product you want to find the unresolved\nissues of."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "getProject",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getProject",
    "access": "public",
    "description": "",
    "lineNumber": 363,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Get the Project by project key\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id289232)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "project",
        "description": "key for the project"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "createProject",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createProject",
    "access": "public",
    "description": "",
    "lineNumber": 376,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Create a new Project\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/project-createProject)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "project",
        "description": "with specs"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "findRapidView",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/jira.js~JiraApi#findRapidView",
    "access": "public",
    "description": "Find the Rapid View for a specified project",
    "lineNumber": 390,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "projectName",
        "description": "name for the project"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "getLastSprintForRapidView",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/jira.js~JiraApi#getLastSprintForRapidView",
    "access": "public",
    "description": "Get the most recent sprint for a given rapidViewId",
    "lineNumber": 408,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "rapidViewId",
        "description": "the id for the rapid view"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "getSprintIssues",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getSprintIssues",
    "access": "public",
    "description": "Get the issues for a rapidView / sprint",
    "lineNumber": 423,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "rapidViewId",
        "description": "the id for the rapid view"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sprintId",
        "description": "the id for the sprint"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "listSprints",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listSprints",
    "access": "public",
    "description": "Get a list of Sprints belonging to a Rapid View",
    "lineNumber": 438,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "rapidViewId",
        "description": "the id for the rapid view"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "addIssueToSprint",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addIssueToSprint",
    "access": "public",
    "description": "Add an issue to the project's current sprint",
    "lineNumber": 450,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "the id of the existing issue"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sprintId",
        "description": "the id of the sprint to add it to"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "issueLink",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#issueLink",
    "access": "public",
    "description": "Create an issue link between two issues",
    "lineNumber": 467,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "a link object formatted how the Jira API specifies"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "listIssueLinkTypes",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listIssueLinkTypes",
    "access": "public",
    "description": "List all issue link types jira knows about\n[Jira Doc](https://docs.atlassian.com/software/jira/docs/api/REST/8.5.0/#api/2/issueLinkType-getIssueLinkTypes)",
    "lineNumber": 482,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "getRemoteLinks",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getRemoteLinks",
    "access": "public",
    "description": "Retrieves the remote links associated with the given issue.",
    "lineNumber": 493,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueNumber",
        "description": "the issue number to find remote links for."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "createRemoteLink",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createRemoteLink",
    "access": "public",
    "description": "",
    "lineNumber": 506,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Creates a remote link associated with the given issue."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueNumber",
        "description": "The issue number to create the remotelink under"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "remoteLink",
        "description": "the remotelink object as specified by the Jira API"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "getVersions",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getVersions",
    "access": "public",
    "description": "Get Versions for a project\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id289653)",
    "lineNumber": 521,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "project",
        "description": "A project key to get versions for"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "getVersion",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getVersion",
    "access": "public",
    "description": "Get details of single Version in project\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/version-getVersion)",
    "lineNumber": 533,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "The id of this version"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "createVersion",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createVersion",
    "access": "public",
    "description": "Create a version\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id288232)",
    "lineNumber": 545,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "an object of the new version"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "updateVersion",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updateVersion",
    "access": "public",
    "description": "Update a version\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#d2e510)",
    "lineNumber": 561,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "an new object of the version to update"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "deleteVersion",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteVersion",
    "access": "public",
    "description": "Delete a version\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/version-delete)",
    "lineNumber": 583,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "versionId",
        "description": "the ID of the version to delete"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moveFixIssuesToId",
        "description": "when provided, existing fixVersions will be moved\n                to this ID. Otherwise, the deleted version will be removed from all\n                issue fixVersions."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moveAffectedIssuesToId",
        "description": "when provided, existing affectedVersions will\n                be moved to this ID. Otherwise, the deleted version will be removed\n                from all issue affectedVersions."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "moveVersion",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#moveVersion",
    "access": "public",
    "description": "Move version\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/version-moveVersion)",
    "lineNumber": 604,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "versionId",
        "description": "the ID of the version to delete"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "an object of the new position"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "searchJira",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#searchJira",
    "access": "public",
    "description": "Pass a search query to Jira\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#d2e4424)",
    "lineNumber": 627,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "searchString",
        "description": "jira query string in JQL"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "optional",
        "description": "object containing any of the following properties"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "optional.startAt",
        "description": ": optional starting index number"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "optional.maxResults",
        "description": ": optional The maximum number of items to\n                 return per page. To manage page size, Jira may return fewer items per\n                 page where a large number of fields are requested."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.fields",
        "description": ": optional array of string names of desired fields"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.expand",
        "description": ": optional array of string names of desired expand nodes"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "createUser",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createUser",
    "access": "public",
    "description": "Create a Jira user\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/user-createUser)",
    "lineNumber": 646,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "Properly Formatted User object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "searchUsers",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#searchUsers",
    "access": "public",
    "description": "Search user on Jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#d2e3756)",
    "lineNumber": 662,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SearchUserOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "typedef",
    "name": "SearchUserOptions",
    "memberof": "src/jira.js~JiraApi",
    "static": true,
    "longname": "src/jira.js~JiraApi.SearchUserOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "(DEPRECATED) A query string used to search username, name or\ne-mail address"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "A query string that is matched against user attributes\n(displayName, and emailAddress) to find relevant users. The string can match the prefix of\nthe attribute's value. For example, query=john matches a user with a displayName of John\nSmith and a user with an emailAddress of johnson@example.com. Required, unless accountId\nor property is specified."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The index of the first user to return (0-based)"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of users to return"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "includeActive",
        "description": "If true, then active users are included\nin the results"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "includeInactive",
        "description": "If true, then inactive users\nare included in the results"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "SearchUserOptions"
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "getUsersInGroup",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getUsersInGroup",
    "access": "public",
    "description": "Get all users in group on Jira",
    "lineNumber": 705,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupname",
        "description": "A query string used to search users in group"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The index of the first user to return (0-based)"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of users to return (defaults to 50)."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "getUsersIssues",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getUsersIssues",
    "access": "public",
    "description": "Get issues related to a user\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id296043)",
    "lineNumber": 726,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "username of user to search for"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "open",
        "description": "determines if only open issues should be returned"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "getUser",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getUser",
    "access": "public",
    "description": "Returns a user.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-user-get)",
    "lineNumber": 740,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accountId",
        "description": "The accountId of user to search for"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "expand",
        "description": "The expand for additional info (groups,applicationRoles)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "getUsers",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getUsers",
    "access": "public",
    "description": "Returns a list of all (active and inactive) users.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-users-search-get)",
    "lineNumber": 757,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The index of the first user to return (0-based)"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of users to return (defaults to 50)."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "addNewIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addNewIssue",
    "access": "public",
    "description": "Add issue to Jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290028)",
    "lineNumber": 773,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "issue",
        "description": "Properly Formatted Issue object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "addWatcher",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addWatcher",
    "access": "public",
    "description": "Add a user as a watcher on an issue",
    "lineNumber": 789,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueKey",
        "description": "the key of the existing issue"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the jira username to add as a watcher to the issue"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "updateAssignee",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updateAssignee",
    "access": "public",
    "description": "Change an assignee on an issue\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-assign)",
    "lineNumber": 806,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueKey",
        "description": "the key of the existing issue"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assigneeName",
        "description": "the jira username to add as a new assignee to the issue"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "updateAssigneeWithId",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updateAssigneeWithId",
    "access": "public",
    "description": "Change an assignee on an issue\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-issue-issueIdOrKey-assignee-put)",
    "lineNumber": 823,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueKey",
        "description": "the key of the existing issue"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "the jira username to add as a new assignee to the issue"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "deleteIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteIssue",
    "access": "public",
    "description": "Delete issue from Jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290791)",
    "lineNumber": 839,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "the Id of the issue to delete"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "updateIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updateIssue",
    "access": "public",
    "description": "Update issue in Jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290878)",
    "lineNumber": 856,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "the Id of the issue to update"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "issueUpdate",
        "description": "update Object as specified by the rest api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "adds parameters to the query string"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "listComponents",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listComponents",
    "access": "public",
    "description": "List Components\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)",
    "lineNumber": 873,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "project",
        "description": "key for the project"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "addNewComponent",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addNewComponent",
    "access": "public",
    "description": "Add component to Jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290028)",
    "lineNumber": 885,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "Properly Formatted Component"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "updateComponent",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updateComponent",
    "access": "public",
    "description": "Update Jira component\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/component-updateComponent)",
    "lineNumber": 902,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "componentId",
        "description": "the Id of the component to update"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "Properly Formatted Component"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "deleteComponent",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteComponent",
    "access": "public",
    "description": "Delete component from Jira\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-api-2-component-id-delete)",
    "lineNumber": 920,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ID of the component."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moveIssuesTo",
        "description": "The ID of the component to replace the deleted component.\n                               If this value is null no replacement is made."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "relatedIssueCounts",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#relatedIssueCounts",
    "access": "public",
    "description": "Get count of issues assigned to the component.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-component-id-relatedIssueCounts-get)",
    "lineNumber": 936,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Component Id."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "createCustomField",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createCustomField",
    "access": "public",
    "description": "Create custom Jira field\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field-createCustomField)",
    "lineNumber": 948,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Properly formatted Field object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "listFields",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listFields",
    "access": "public",
    "description": "List all fields custom and not that jira knows about.\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)",
    "lineNumber": 963,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "createFieldOption",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createFieldOption",
    "access": "public",
    "description": "Add an option for a select list issue field.\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-createOption)",
    "lineNumber": 976,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldKey",
        "description": "the key of the select list field"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": "properly formatted Option object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "listFieldOptions",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listFieldOptions",
    "access": "public",
    "description": "Returns all options defined for a select list issue field.\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-getAllOptions)",
    "lineNumber": 992,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldKey",
        "description": "the key of the select list field"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "upsertFieldOption",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#upsertFieldOption",
    "access": "public",
    "description": "Creates or updates an option for a select list issue field.\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-putOption)",
    "lineNumber": 1006,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldKey",
        "description": "the key of the select list field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "optionId",
        "description": "the id of the modified option"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": "properly formatted Option object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "getFieldOption",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getFieldOption",
    "access": "public",
    "description": "Returns an option for a select list issue field.\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-getOption)",
    "lineNumber": 1023,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldKey",
        "description": "the key of the select list field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "optionId",
        "description": "the id of the option"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "deleteFieldOption",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteFieldOption",
    "access": "public",
    "description": "Deletes an option from a select list issue field.\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#api/2/field/{fieldKey}/option-delete)",
    "lineNumber": 1036,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldKey",
        "description": "the key of the select list field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "optionId",
        "description": "the id of the deleted option"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "getIssueProperty",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssueProperty",
    "access": "public",
    "description": "",
    "lineNumber": 1053,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Get Property of Issue by Issue and Property Id\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/properties-getProperty)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueNumber",
        "description": "The issue number to search for including the project key"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": "The property key to search for"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "getIssueChangelog",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssueChangelog",
    "access": "public",
    "description": "",
    "lineNumber": 1068,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "List all changes for an issue, sorted by date, starting from the latest\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/changelog)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueNumber",
        "description": "The issue number to search for including the project key"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "optional starting index number"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "optional ending index number"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "getIssueWatchers",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssueWatchers",
    "access": "public",
    "description": "",
    "lineNumber": 1085,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "List all watchers for an issue\n[Jira Doc](http://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getIssueWatchers)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueNumber",
        "description": "The issue number to search for including the project key"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "listPriorities",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listPriorities",
    "access": "public",
    "description": "List all priorities jira knows about\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)",
    "lineNumber": 1096,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "listTransitions",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listTransitions",
    "access": "public",
    "description": "List Transitions for a specific issue that are available to the current user\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)",
    "lineNumber": 1108,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "get transitions available for the issue"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "transitionIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#transitionIssue",
    "access": "public",
    "description": "Transition issue in Jira\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id290489)",
    "lineNumber": 1124,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "the Id of the issue to delete"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "issueTransition",
        "description": "transition object from the jira rest API"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "listProjects",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listProjects",
    "access": "public",
    "description": "List all Viewable Projects\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id289193)",
    "lineNumber": 1139,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "addComment",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addComment",
    "access": "public",
    "description": "Add a comment to an issue\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#id108798)",
    "lineNumber": 1152,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "Issue to add a comment to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "comment",
        "description": "string containing comment"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "addCommentAdvanced",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addCommentAdvanced",
    "access": "public",
    "description": "Add a comment to an issue, supports full comment object\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#id108798)",
    "lineNumber": 1171,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "Issue to add a comment to"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "comment",
        "description": "The object containing your comment data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "updateComment",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updateComment",
    "access": "public",
    "description": "Update comment for an issue\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-updateComment)",
    "lineNumber": 1190,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "Issue with the comment"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "commentId",
        "description": "Comment that is updated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "comment",
        "description": "string containing new comment"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "extra options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "getComments",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getComments",
    "access": "public",
    "description": "",
    "lineNumber": 1210,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Get Comments by IssueId.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-comment-list-post)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "this issue this comment is on"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "getComment",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getComment",
    "access": "public",
    "description": "",
    "lineNumber": 1224,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Get Comment by Id.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-comment-list-post)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "this issue this comment is on"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "commentId",
        "description": "the id of the comment"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "deleteComment",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteComment",
    "access": "public",
    "description": "",
    "lineNumber": 1238,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Delete Comments by Id.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-comment-list-post)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "this issue this comment is on"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "commentId",
        "description": "the id of the comment"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "addWorklog",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addWorklog",
    "access": "public",
    "description": "Add a worklog to a project\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id291617)",
    "lineNumber": 1256,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "Issue to add a worklog to"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "worklog",
        "description": "worklog object from the rest API"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newEstimate",
        "description": "the new value for the remaining estimate field"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "extra options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "updatedWorklogs",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#updatedWorklogs",
    "access": "public",
    "description": "Get ids of worklogs modified since\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/worklog-getWorklogsForIds)",
    "lineNumber": 1286,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "since",
        "description": "a date time in unix timestamp format since when updated worklogs\nwill be returned."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "expand",
        "description": "ptional comma separated list of parameters to expand: properties\n(provides worklog properties)."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "deleteWorklog",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteWorklog",
    "access": "public",
    "description": "Delete worklog from issue\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#d2e1673)",
    "lineNumber": 1307,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "the Id of the issue to delete"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "worklogId",
        "description": "the Id of the worklog in issue to delete"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "deleteIssueLink",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteIssueLink",
    "access": "public",
    "description": "Deletes an issue link.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-issueLink-linkId-delete)",
    "lineNumber": 1324,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "linkId",
        "description": "the Id of the issue link to delete"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "getWorklogs",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getWorklogs",
    "access": "public",
    "description": "Returns worklog details for a list of worklog IDs.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-worklog-list-post)",
    "lineNumber": 1341,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "worklogsIDs",
        "description": "a list of worklog IDs."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "expand",
        "description": "expand to include additional information about worklogs"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "getIssueWorklogs",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssueWorklogs",
    "access": "public",
    "description": "Get worklogs list from a given issue\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-worklog-get)",
    "lineNumber": 1365,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "the Id of the issue to find worklogs for"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "optional starting index number"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000",
        "defaultRaw": 1000,
        "name": "maxResults",
        "description": "optional ending index number"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "listIssueTypes",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listIssueTypes",
    "access": "public",
    "description": "List all Issue Types jira knows about\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id295946)",
    "lineNumber": 1382,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "registerWebhook",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#registerWebhook",
    "access": "public",
    "description": "Register a webhook\n[Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)",
    "lineNumber": 1394,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "webhook",
        "description": "properly formatted webhook"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "listWebhooks",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listWebhooks",
    "access": "public",
    "description": "List all registered webhooks\n[Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)",
    "lineNumber": 1408,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "getWebhook",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getWebhook",
    "access": "public",
    "description": "Get a webhook by its ID\n[Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)",
    "lineNumber": 1420,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "webhookID",
        "description": "id of webhook to get"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "deleteWebhook",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteWebhook",
    "access": "public",
    "description": "Delete a registered webhook\n[Jira Doc](https://developer.atlassian.com/display/JIRADEV/JIRA+Webhooks+Overview)",
    "lineNumber": 1432,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "webhookID",
        "description": "id of the webhook to delete"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "getCurrentUser",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getCurrentUser",
    "access": "public",
    "description": "Describe the currently authenticated user\n[Jira Doc](http://docs.atlassian.com/jira/REST/latest/#id2e865)",
    "lineNumber": 1445,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "getBacklogForRapidView",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getBacklogForRapidView",
    "access": "public",
    "description": "Retrieve the backlog of a certain Rapid View",
    "lineNumber": 1456,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "rapidViewId",
        "description": "rapid view id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "addAttachmentOnIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#addAttachmentOnIssue",
    "access": "public",
    "description": "Add attachment to a Issue\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/issue/{issueIdOrKey}/attachments-addAttachment)",
    "lineNumber": 1472,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "issue id"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "readStream",
        "description": "readStream object from fs"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "issueNotify",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#issueNotify",
    "access": "public",
    "description": "Notify people related to issue\n[Jira Doc](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-notify)",
    "lineNumber": 1493,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "issue id"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "notificationBody",
        "description": "properly formatted body"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "listStatus",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#listStatus",
    "access": "public",
    "description": "Get list of possible statuses\n[Jira Doc](https://docs.atlassian.com/jira/REST/latest/#api/2/status-getStatuses)",
    "lineNumber": 1507,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "getDevStatusSummary",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getDevStatusSummary",
    "access": "public",
    "description": "Get a Dev-Status summary by issue ID",
    "lineNumber": 1518,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "id of issue to get"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "getDevStatusDetail",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getDevStatusDetail",
    "access": "public",
    "description": "Get a Dev-Status detail by issue ID",
    "lineNumber": 1534,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueId",
        "description": "id of issue to get"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "applicationType",
        "description": "type of application (stash, bitbucket)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dataType",
        "description": "info to return (repository, pullrequest)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "getIssue",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssue",
    "access": "public",
    "description": "Get issue\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-getIssue)",
    "lineNumber": 1553,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueIdOrKey",
        "description": "Id of issue"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "expand",
        "description": "A comma-separated list of the parameters to expand."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "moveToBacklog",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#moveToBacklog",
    "access": "public",
    "description": "Move issues to backlog\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/backlog-moveIssuesToBacklog)",
    "lineNumber": 1569,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "issues",
        "description": "id or key of issues to get"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "getAllBoards",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getAllBoards",
    "access": "public",
    "description": "Get all boards\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getAllBoards)",
    "lineNumber": 1590,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned boards."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of boards to return per page."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "type",
        "description": "Filters results to boards of the specified type."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "Filters results to boards that match the specified name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "projectKeyOrId",
        "description": "Filters results to boards that are relevant to a project."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "createBoard",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#createBoard",
    "access": "public",
    "description": "Create Board\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-createBoard)",
    "lineNumber": 1612,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "boardBody",
        "description": "Board name, type and filter Id is required."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardBody.type",
        "description": "Valid values: scrum, kanban"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardBody.name",
        "description": "Must be less than 255 characters."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardBody.filterId",
        "description": "Id of a filter that the user has permissions to view."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "getBoard",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getBoard",
    "access": "public",
    "description": "Get Board\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getBoard)",
    "lineNumber": 1627,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "deleteBoard",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteBoard",
    "access": "public",
    "description": "Delete Board\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-deleteBoard)",
    "lineNumber": 1639,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "getIssuesForBacklog",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssuesForBacklog",
    "access": "public",
    "description": "Get issues for backlog\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getIssuesForBacklog)",
    "lineNumber": 1659,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned issues. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of issues to return per page. Default: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "jql",
        "description": "Filters results using a JQL query."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "validateQuery",
        "description": "Specifies whether to validate the JQL query or not.\nDefault: true."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "getConfiguration",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getConfiguration",
    "access": "public",
    "description": "Get Configuration\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getConfiguration)",
    "lineNumber": 1678,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "getIssuesForBoard",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssuesForBoard",
    "access": "public",
    "description": "Get issues for board\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getIssuesForBoard)",
    "lineNumber": 1696,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned issues. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of issues to return per page. Default: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "jql",
        "description": "Filters results using a JQL query."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "validateQuery",
        "description": "Specifies whether to validate the JQL query or not.\nDefault: true."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "getIssueEstimationForBoard",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssueEstimationForBoard",
    "access": "public",
    "description": "Get issue estimation for board\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-getIssueEstimationForBoard)",
    "lineNumber": 1717,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueIdOrKey",
        "description": "Id of issue"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "The id of the board required to determine which field\nis used for estimation."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "getEpics",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getEpics",
    "access": "public",
    "description": "Get Epics\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/epic-getEpics)",
    "lineNumber": 1736,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned epics. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of epics to return per page. Default: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "done",
        "description": "Filters results to epics that are either done or not done.\nValid values: true, false."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "getBoardIssuesForEpic",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getBoardIssuesForEpic",
    "access": "public",
    "description": "Get board issues for epic\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/epic-getIssuesForEpic)\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/epic-getIssuesWithoutEpic)",
    "lineNumber": 1761,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "epicId",
        "description": "Id of epic to retrieve, specify 'none' to get issues without an epic."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned issues. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of issues to return per page. Default: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "jql",
        "description": "Filters results using a JQL query."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "validateQuery",
        "description": "Specifies whether to validate the JQL query or not.\nDefault: true."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "estimateIssueForBoard",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#estimateIssueForBoard",
    "access": "public",
    "description": "Estimate issue for board\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-estimateIssueForBoard)",
    "lineNumber": 1784,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "issueIdOrKey",
        "description": "Id of issue"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "The id of the board required to determine which field\nis used for estimation."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "value to set"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "rankIssues",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#rankIssues",
    "access": "public",
    "description": "Rank Issues\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-rankIssues)",
    "lineNumber": 1802,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "value to set"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "getProjects",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getProjects",
    "access": "public",
    "description": "Get Projects\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/project-getProjects)",
    "lineNumber": 1820,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned projects. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of projects to return per page.\nDefault: 50."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "getProjectsFull",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getProjectsFull",
    "access": "public",
    "description": "Get Projects Full\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/project-getProjectsFull)",
    "lineNumber": 1836,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "getBoardPropertiesKeys",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getBoardPropertiesKeys",
    "access": "public",
    "description": "Get Board Properties Keys\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-getPropertiesKeys)",
    "lineNumber": 1848,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "deleteBoardProperty",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#deleteBoardProperty",
    "access": "public",
    "description": "Delete Board Property\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-deleteProperty)",
    "lineNumber": 1861,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "propertyKey",
        "description": "Id of property to delete"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "setBoardProperty",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#setBoardProperty",
    "access": "public",
    "description": "Set Board Property\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-setProperty)",
    "lineNumber": 1877,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "propertyKey",
        "description": "Id of property to delete"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "value to set, for objects make sure to stringify first"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "getBoardProperty",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getBoardProperty",
    "access": "public",
    "description": "Get Board Property\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/properties-getProperty)",
    "lineNumber": 1893,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "propertyKey",
        "description": "Id of property to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "getAllSprints",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getAllSprints",
    "access": "public",
    "description": "Get All Sprints\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/sprint-getAllSprints)",
    "lineNumber": 1910,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned sprints. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of sprints to return per page.\nDefault: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "Filters results to sprints in specified states.\nValid values: future, active, closed."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "getBoardIssuesForSprint",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getBoardIssuesForSprint",
    "access": "public",
    "description": "Get Board issues for sprint\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/sprint-getIssuesForSprint)",
    "lineNumber": 1935,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sprintId",
        "description": "Id of sprint to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned issues. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of issues to return per page. Default: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "jql",
        "description": "Filters results using a JQL query."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "validateQuery",
        "description": "Specifies whether to validate the JQL query or not.\nDefault: true."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "getAllVersions",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getAllVersions",
    "access": "public",
    "description": "Get All Versions\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board/{boardId}/version-getAllVersions)",
    "lineNumber": 1961,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "boardId",
        "description": "Id of board to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned versions. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of versions to return per page.\nDefault: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "released",
        "description": "Filters results to versions that are either released or\nunreleased.Valid values: true, false."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "getFilter",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getFilter",
    "access": "public",
    "description": "Get Filter\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/filter)",
    "lineNumber": 1979,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filterId",
        "description": "Id of filter to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "getEpic",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getEpic",
    "access": "public",
    "description": "Get Epic\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-getEpic)",
    "lineNumber": 1991,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "epicIdOrKey",
        "description": "Id of epic to retrieve"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "partiallyUpdateEpic",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#partiallyUpdateEpic",
    "access": "public",
    "description": "Partially update epic\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-partiallyUpdateEpic)",
    "lineNumber": 2004,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "epicIdOrKey",
        "description": "Id of epic to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "value to set, for objects make sure to stringify first"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "getIssuesForEpic",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssuesForEpic",
    "access": "public",
    "description": "Get issues for epic\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-getIssuesForEpic)\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-getIssuesWithoutEpic)",
    "lineNumber": 2026,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "epicId",
        "description": "Id of epic to retrieve, specify 'none' to get issues without an epic."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startAt",
        "description": "The starting index of the returned issues. Base index: 0."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxResults",
        "description": "The maximum number of issues to return per page. Default: 50."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "jql",
        "description": "Filters results using a JQL query."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "validateQuery",
        "description": "Specifies whether to validate the JQL query or not.\nDefault: true."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fields",
        "description": "The list of fields to return for each issue."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "moveIssuesToEpic",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#moveIssuesToEpic",
    "access": "public",
    "description": "Move Issues to Epic\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-moveIssuesToEpic)\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-removeIssuesFromEpic)",
    "lineNumber": 2048,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "epicIdOrKey",
        "description": "Id of epic to move issue to, or 'none' to remove from epic"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "issues",
        "description": "array of issues to move"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "rankEpics",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#rankEpics",
    "access": "public",
    "description": "Rank Epics\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/epic-rankEpics)",
    "lineNumber": 2066,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "epicIdOrKey",
        "description": "Id of epic"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "value to set"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "getServerInfo",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getServerInfo",
    "access": "public",
    "description": "",
    "lineNumber": 2081,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "Get server info\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-api-2-serverInfo-get)"
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "getIssueCreateMetadata",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#getIssueCreateMetadata",
    "access": "public",
    "description": "",
    "lineNumber": 2100,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "optional",
        "description": "object containing any of the following properties"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.projectIds",
        "description": ": optional Array of project ids to return metadata for"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.projectKeys",
        "description": ": optional Array of project keys to return metadata for"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.issuetypeIds",
        "description": ": optional Array of issuetype ids to return metadata for"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.issuetypeNames",
        "description": ": optional Array of issuetype names to return metadata\nfor"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "optional.expand",
        "description": ": optional Include additional information about issue\nmetadata. Valid value is 'projects.issuetypes.fields'\nGet metadata for creating an issue.\n[Jira Doc](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-rest-api-3-issue-createmeta-get)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "genericGet",
    "memberof": "src/jira.js~JiraApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/jira.js~JiraApi#genericGet",
    "access": "public",
    "description": "Generic Get Request\n[Jira Doc](https://docs.atlassian.com/jira-software/REST/cloud/2/)",
    "lineNumber": 2113,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "endpoint",
        "description": "Rest API endpoint"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# JavaScript JIRA API for node.js #\n\nA node.js module, which provides an object oriented wrapper for the Jira Rest API.\n\n[![Documentation](https://img.shields.io/badge/Documentation--green.svg)](https://jira-node.github.io/)\n[![Jira Rest API](https://img.shields.io/badge/Jira%20Rest%20API--green.svg)](http://docs.atlassian.com/jira/REST/latest/)\n[![Run tests](https://github.com/jira-node/node-jira-client/workflows/Run%20tests/badge.svg)](https://github.com/jira-node/node-jira-client/actions)\n[![npm](https://img.shields.io/npm/v/jira-client.svg)](https://www.npmjs.com/package/jira-client)\n[![Downloads](https://img.shields.io/npm/dm/jira-client.svg)](https://npmjs.com/jira-client)\n[![Install Size](https://packagephobia.now.sh/badge?p=jira-client)](https://packagephobia.now.sh/result?p=jira-client)\n[![dependency Status](https://david-dm.org/jira-node/node-jira-client/status.svg)](https://david-dm.org/jira-node/node-jira-client)\n[![devDependency Status](https://david-dm.org/jira-node/node-jira-client/dev-status.svg)](https://david-dm.org/jira-node/node-jira-client?type=dev)\n\n## Installation ##\n\nInstall with the node package manager [npm](http://npmjs.org):\n\n```shell\n$ npm install jira-client\n```\n\n## Examples ##\n\n### Create the JIRA client ###\n\n```javascript\n// With ES5\nvar JiraApi = require('jira-client');\n\n// With ES6\nimport JiraApi from 'jira-client';\n\n// Initialize\nvar jira = new JiraApi({\n  protocol: 'https',\n  host: 'jira.somehost.com',\n  username: 'username',\n  password: 'password',\n  apiVersion: '2',\n  strictSSL: true\n});\n```\n\n### Find the status of an issue ###\n\n```javascript\n// ES5\n// We are using an ES5 Polyfill for Promise support. Please note that if you don't explicitly\n// apply a catch exceptions will get swallowed. Read up on ES6 Promises for further details.\njira.findIssue(issueNumber)\n  .then(function(issue) {\n    console.log('Status: ' + issue.fields.status.name);\n  })\n  .catch(function(err) {\n    console.error(err);\n  });\n\n// ES6\njira.findIssue(issueNumber)\n  .then(issue => {\n    console.log(`Status: ${issue.fields.status.name}`);\n  })\n  .catch(err => {\n    console.error(err);\n  });\n\n// ES7\nasync function logIssueName() {\n  try {\n    const issue = await jira.findIssue(issueNumber);\n    console.log(`Status: ${issue.fields.status.name}`);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n```\n\n## Documentation ##\nCan't find what you need in the readme?  Check out our documentation here: https://jira-node.github.io/\n",
    "longname": "/Users/piou/Dev/node-jira-client/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"jira-client\",\n  \"version\": \"6.23.0\",\n  \"description\": \"Wrapper for the JIRA API\",\n  \"author\": \"Steven Surowiec <steven.surowiec@gmail.com>\",\n  \"contributors\": [\n    \"Chris Moultrie <chris@moultrie.org>\",\n    \"Lucas Vogelsang <l@lucasvo.com>\",\n    \"Matt Smith <mtscout6+node-jira@gmail.com>\",\n    \"Anson Wayman <kanoyugoro+node-jira@gmail.com>\"\n  ],\n  \"homepage\": \"http://github.com/jira-node/node-jira-client\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://github.com/jira-node/node-jira-client\"\n  },\n  \"engine\": {\n    \"node\": \">=10.0.0\"\n  },\n  \"main\": \"./lib/jira.js\",\n  \"files\": [\n    \"lib\",\n    \"docs\",\n    \"LICENSE.md\",\n    \"README.md\"\n  ],\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@babel/runtime\": \"^7.6.0\",\n    \"request\": \"^2.88.0\",\n    \"request-promise\": \"^4.1.1\"\n  },\n  \"scripts\": {\n    \"build\": \"rm -rf lib && babel src --out-dir lib\",\n    \"docs-build\": \"rm -rf docs && esdoc -c esdoc.json\",\n    \"lint\": \"eslint ./\",\n    \"test\": \"npm run lint && mocha --require @babel/register && npm run docs-build\",\n    \"prepublishOnly\": \"npm run build && npm run docs-build\",\n    \"release\": \"release\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.6.0\",\n    \"@babel/core\": \"^7.6.0\",\n    \"@babel/plugin-transform-runtime\": \"^7.6.0\",\n    \"@babel/preset-env\": \"^7.6.0\",\n    \"@babel/register\": \"^7.6.0\",\n    \"babel-eslint\": \"^10.0.3\",\n    \"babel-plugin-add-module-exports\": \"^1.0.0\",\n    \"chai\": \"^4.2.0\",\n    \"chai-as-promised\": \"^7.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^7.7.0\",\n    \"eslint-config-airbnb\": \"^18.0.1\",\n    \"eslint-plugin-import\": \"^2.18.2\",\n    \"eslint-plugin-mocha\": \"^8.0.0\",\n    \"mocha\": \"^8.1.1\",\n    \"release-script\": \"^1.0.1\"\n  },\n  \"release-script\": {\n    \"docsRepo\": \"git@github.com:jira-node/jira-node.github.io.git\",\n    \"docsRoot\": \"docs/\",\n    \"tmpDocsRepo\": \"tmp-docs-repo\"\n  }\n}\n",
    "longname": "/Users/piou/Dev/node-jira-client/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]