{"version":3,"sources":["../../src/Config.test.js"],"names":["describe","test","configPath","Config","configFilePath","expect","toBe","program","config","obj1","foo","defaults","hello","merged","defaultValues","toEqual","nested","arr1","arr2"],"mappings":";;AAAA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCC,EAAAA,IAAI,CAAC,qCAAD,EAAwC,MAAM;AAChD,UAAMC,UAAU,GAAGC,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAAnB;AACAC,IAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBI,IAAnB,CAAwB,4BAAxB;AACD,GAHG,CAAJ;AAMAL,EAAAA,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACxCM,uBAAQC,MAAR,GAAiB,4BAAjB;AACA,UAAMN,UAAU,GAAGC,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAAnB;AACAC,IAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBI,IAAnB,CAAwBC,mBAAQC,MAAhC;AACD,GAJG,CAAJ;AAKD,CAZO,CAAR;AAcAR,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BC,EAAAA,IAAI,CAAC,yBAAD,EAA4B,MAAM;AACpC,UAAMQ,IAAI,GAAG;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAb;AACA,UAAMC,QAAQ,GAAG;AACfD,MAAAA,GAAG,EAAE,KADU;AAEfE,MAAAA,KAAK,EAAE;AAFQ,KAAjB;AAKA,UAAMC,MAAM,GAAGV,MAAM,CAACW,aAAP,CAAqBL,IAArB,EAA2BE,QAA3B,CAAf;AACAN,IAAAA,MAAM,CAACQ,MAAD,CAAN,CAAeE,OAAf,CAAuB;AAAEL,MAAAA,GAAG,EAAE,KAAP;AAAcE,MAAAA,KAAK,EAAE;AAArB,KAAvB;AACD,GATG,CAAJ;AAUAX,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAMQ,IAAI,GAAG;AACXO,MAAAA,MAAM,EAAE;AACNN,QAAAA,GAAG,EAAE;AADC;AADG,KAAb;AAKA,UAAMC,QAAQ,GAAG;AACfK,MAAAA,MAAM,EAAE;AACNN,QAAAA,GAAG,EAAE,KADC;AAENE,QAAAA,KAAK,EAAE;AAFD;AADO,KAAjB;AAOA,UAAMC,MAAM,GAAGV,MAAM,CAACW,aAAP,CAAqBL,IAArB,EAA2BE,QAA3B,CAAf;AACAN,IAAAA,MAAM,CAACQ,MAAD,CAAN,CAAeE,OAAf,CAAuB;AACrBC,MAAAA,MAAM,EAAE;AAAEN,QAAAA,GAAG,EAAE,KAAP;AAAcE,QAAAA,KAAK,EAAE;AAArB;AADa,KAAvB;AAGD,GAjBG,CAAJ;AAkBAX,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAMQ,IAAI,GAAG;AACXQ,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AADK,KAAb;AAGA,UAAMN,QAAQ,GAAG;AACfM,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADS;AAEfC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAFS,KAAjB;AAKA,UAAML,MAAM,GAAGV,MAAM,CAACW,aAAP,CAAqBL,IAArB,EAA2BE,QAA3B,CAAf;AACAN,IAAAA,MAAM,CAACQ,MAAD,CAAN,CAAeE,OAAf,CAAuB;AACrBE,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADe;AAErBC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAFe,KAAvB;AAID,GAdG,CAAJ;AAeD,CA5CO,CAAR","sourcesContent":["import * as Config from './Config';\nimport program from 'commander';\n\ndescribe('Config file path', () => {\n  test('Returns config file on current path', () => {\n    const configPath = Config.configFilePath('foobar/');\n    expect(configPath).toBe('foobar/changelog.config.js');\n  });\n\n\n  test('Return cli config file path', () => {\n    program.config = '/custom/path/bar.config.js';\n    const configPath = Config.configFilePath('foobar/');\n    expect(configPath).toBe(program.config);\n  });\n});\n\ndescribe('Default values', () => {\n  test('only add default values', () => {\n    const obj1 = { foo: 'bar' };\n    const defaults = {\n      foo: 'baz',\n      hello: 'world',\n    };\n\n    const merged = Config.defaultValues(obj1, defaults);\n    expect(merged).toEqual({ foo: 'bar', hello: 'world' });\n  })\n  test('merges nested objects', () => {\n    const obj1 = {\n      nested: {\n        foo: 'bar',\n      },\n    };\n    const defaults = {\n      nested: {\n        foo: 'baz',\n        hello: 'world',\n      }\n    };\n\n    const merged = Config.defaultValues(obj1, defaults);\n    expect(merged).toEqual({\n      nested: { foo: 'bar', hello: 'world' },\n    });\n  });\n  test('does not merge arrays', () => {\n    const obj1 = {\n      arr1: [2,4,6],\n    };\n    const defaults = {\n      arr1: [1,3,5],\n      arr2: [6,7,8],\n    };\n\n    const merged = Config.defaultValues(obj1, defaults);\n    expect(merged).toEqual({\n      arr1: [2,4,6],\n      arr2: [6,7,8],\n    });\n  });\n})\n"],"file":"Config.test.js"}