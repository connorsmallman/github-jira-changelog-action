{"version":3,"sources":["../../src/Jira.test.js"],"names":["DEFAULT_TICKET","fields","issuetype","name","project","key","fixVersions","config","jira","beforeEach","api","host","email","token","Jira","tixInJira","jiraVersions","fetchJiraTicket","jest","fn","includes","Promise","resolve","reject","getVersions","createVersion","data","updateIssue","describe","test","tickets","parseTicketsFromString","expect","toEqual","ticketIDPattern","commit","findJiraInCommit","fullText","tix","map","t","not","arrayContaining","toBeCalledTimes","fooTicket","barTicket","includeIssueTypes","includeTicket","toBe","excludeIssueTypes","ver","createProjectVersion","toHaveBeenCalled","id","addTicketsToReleaseVersion","mockUpdateIssue","mock","calls","commits","revision","changelog","generate"],"mappings":"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","sourcesContent":["import Jira from './Jira';\nimport {getDefaultConfig} from './Config';\n\nconst DEFAULT_TICKET = () => ({\n  fields: {\n    issuetype: {\n      name: 'story'\n    },\n    project: {\n      key: 'proj1',\n    },\n    fixVersions: [],\n  },\n});\n\nlet config;\nlet jira;\nbeforeEach(() => {\n  config = getDefaultConfig();\n  config.jira.api = {\n    host: '-',\n    email: '-',\n    token: '-',\n  };\n  jira = new Jira(config);\n});\n\n// Mock jira functions\nlet tixInJira = [];\nlet jiraVersions = [];\nbeforeEach(() => {\n  tixInJira = [];\n  jiraVersions = [];\n\n  jira.fetchJiraTicket = jest.fn((key) => {\n    if (tixInJira.includes(key)) {\n      return Promise.resolve({key, ...DEFAULT_TICKET() });\n    }\n    return Promise.reject();\n  });\n\n  jira.jira.getVersions = jest.fn((project) => Promise.resolve(jiraVersions));\n  jira.jira.createVersion = jest.fn((data) => Promise.resolve(data));\n  jira.jira.updateIssue = jest.fn((key, data) => Promise.resolve(data));\n});\n\ndescribe('Extract ticket keys from a string', () => {\n  test('Parse tickets out of a commit message', () => {\n    const tickets = jira.parseTicketsFromString('Foo bar [ENG-123] [ABC-1]nospace');\n    expect(tickets).toEqual(['ENG-123', 'ABC-1']);\n  });\n\n  test('no capture group in regexp', () => {\n    config.jira.ticketIDPattern = /[A-Z]+\\-[0-9]+/i;\n    jira = new Jira(config);\n    const tickets = jira.parseTicketsFromString('Foo bar ENG-123 ABC-1nospace');\n    expect(tickets).toEqual(['ENG-123', 'ABC-1']);\n  });\n});\n\ndescribe('Fetch ticket objects from Jira', () => {\n  test('Get tickets from jira', async () => {\n    tixInJira = ['ENG-123', 'ABC-1'];\n\n    const commit = await jira.findJiraInCommit({\n      fullText: 'Foo bar [ENG-123] [ABC-1] [NOOP-345]',\n    });\n    const tix = commit.tickets.map(t => t.key);\n\n    expect(tix).toEqual(['ENG-123', 'ABC-1']);\n    expect(tix).not.toEqual(expect.arrayContaining(['NOOP-345']));\n  });\n\n  test('Cache jira requests', async () => {\n    tixInJira = ['ENG-123', 'ABC-1'];\n\n    const commit = await jira.findJiraInCommit({\n      fullText: '[ENG-123] [ABC-1] [ENG-123]',\n    });\n    const tix = commit.tickets.map(t => t.key);\n\n    expect(tix).toEqual(['ENG-123', 'ABC-1']);\n    expect(jira.fetchJiraTicket).toBeCalledTimes(2);\n  });\n});\n\ndescribe('Filtering by ticket type', () => {\n  const fooTicket = {\n    ...DEFAULT_TICKET(),\n    fields: {\n      issuetype: {\n        name: 'foo'\n      },\n    },\n  };\n  const barTicket = {\n    ...DEFAULT_TICKET(),\n    fields: {\n      issuetype: {\n        name: 'bar'\n      },\n    },\n  };\n\n  test('Has include list', () => {\n    config.jira.includeIssueTypes = ['foo', 'boo'];\n    jira = new Jira(config);\n    expect(jira.includeTicket(fooTicket)).toBe(true);\n    expect(jira.includeTicket(barTicket)).toBe(false);\n  });\n\n  test('Does not have include list', () => {\n    config.jira.includeIssueTypes = [];\n    jira = new Jira(config);\n    expect(jira.includeTicket(fooTicket)).toBe(true);\n    expect(jira.includeTicket(barTicket)).toBe(true);\n  });\n\n  test('Has exclude list', () => {\n    config.jira.excludeIssueTypes = ['foo', 'boo'];\n    jira = new Jira(config);\n    expect(jira.includeTicket(fooTicket)).toBe(false);\n    expect(jira.includeTicket(barTicket)).toBe(true);\n  });\n\n  test('Has conflicting include/exclude lists', () => {\n    // Includes list is used, if it exists\n    config.jira.includeIssueTypes = ['foo', 'boo'];\n    config.jira.excludeIssueTypes = ['foo', 'boo'];\n    jira = new Jira(config);\n    expect(jira.includeTicket(fooTicket)).toBe(true);\n    expect(jira.includeTicket(barTicket)).toBe(false);\n  });\n\n  test('Has neither include/exclude lists', () => {\n    config.jira.includeIssueTypes = null;\n    config.jira.excludeIssueTypes = null;\n    jira = new Jira(config);\n    expect(jira.includeTicket(fooTicket)).toBe(true);\n    expect(jira.includeTicket(barTicket)).toBe(true);\n  })\n});\n\ndescribe('Release version', () => {\n  test('create new project version', async () => {\n    const ver = await jira.createProjectVersion('test-version-1', 'project1');\n    expect(ver.name).toBe('test-version-1');\n    expect(ver.project).toBe('project1');\n    expect(jira.jira.createVersion).toHaveBeenCalled();\n  });\n\n  test('reuse existing proejct version', async () => {\n    jiraVersions = [{\n      name: 'test-version-1',\n      project: 'project1',\n    }];\n    const ver = await jira.createProjectVersion('test-version-1', 'project1');\n    expect(ver.name).toBe('test-version-1');\n    expect(ver.project).toBe('project1');\n    expect(jira.jira.createVersion).not.toHaveBeenCalled();\n  });\n\n  test('add release to tickets', async () => {\n    const tickets = [\n      {id: 987, key: 'ENG-123', ...DEFAULT_TICKET()},\n      {id: 876, key: 'BAR-234', ...DEFAULT_TICKET()},\n    ]\n    await jira.addTicketsToReleaseVersion(tickets, 'test-release-1');\n\n    expect(jira.jira.createVersion).toBeCalledTimes(1);\n\n    const mockUpdateIssue = jira.jira.updateIssue;\n    expect(mockUpdateIssue).toBeCalledTimes(2);\n    expect(mockUpdateIssue.mock.calls[0][0]).toBe(987);\n    expect(mockUpdateIssue.mock.calls[0][1].fields.fixVersions).toEqual([{ name: 'test-release-1'}]);\n    expect(mockUpdateIssue.mock.calls[1][0]).toBe(876);\n    expect(mockUpdateIssue.mock.calls[1][1].fields.fixVersions).toEqual([{ name: 'test-release-1'}]);\n  });\n});\n\n// Pull it all together\ndescribe('Generate changelog', () => {\n  const commits = [\n    {\n      revision: '1',\n      fullText: 'Testing [ENG-123][BAR-234]',\n    },\n    {\n      revision: '2',\n      fullText: 'Hello world [ENG-123]',\n    },\n    {\n      revision: '4',\n      fullText: '[BOO-345] The quick brown fox',\n    },\n  ];\n\n  beforeEach(() => {\n    tixInJira = ['ENG-123', 'BAR-234', 'BOO-345'];\n  });\n\n  test('Tickets are attached to commits', async () => {\n    const changelog = await jira.generate(commits);\n    expect(changelog[0].tickets.map(t => t.key)).toEqual(['ENG-123', 'BAR-234']);\n    expect(changelog[1].tickets.map(t => t.key)).toEqual(['ENG-123']);\n    expect(changelog[2].tickets.map(t => t.key)).toEqual(['BOO-345']);\n  });\n});\n"],"file":"Jira.test.js"}