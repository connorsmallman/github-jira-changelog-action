{"version":3,"sources":["../../src/template.test.js"],"names":["describe","test","logs","revision","reverted","filtered","expect","length","toBe","map","i","toEqual","revertedBy","tickets","key","commits","date","toBeFalsy","slackUser","fields","reporter","email","displayName","reporters","za","find","r","name","tom","t","status","config","jira","approvalStatus","groups","pending","approved","undefined","createTicket","issuetype","commitLogs","transformed","all","noTickets","pendingByOwner"],"mappings":"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","sourcesContent":["\nimport {\n  filterRevertedCommits,\n  decorateTicketReverts,\n  getTicketReporters,\n  groupTicketsByStatus,\n  transformCommitLogs,\n} from './template';\n\ndescribe('filter reverts', () => {\n  test('the revert commit is removed when the original commit is in the list', () => {\n    const logs = [\n      { revision: 10 },\n      { revision: 11, reverted: 10, }, // filter this revert commit out & keep revision 10\n      { revision: 12 },\n    ];\n    const filtered = filterRevertedCommits(logs);\n    expect(filtered.length).toBe(2);\n    expect(filtered.map(i => i.revision)).toEqual([10, 12]);\n    expect(filtered[0].revertedBy).toBe(11);\n  });\n\n  test('the revert commit is retained when original commit is not in list', () => {\n    const logs = [\n      { revision: 10 },\n      { revision: 11, reverted: 5, }, // keep revert commit because revision 5 isn't in list\n      { revision: 12 },\n    ];\n    const filtered = filterRevertedCommits(logs);\n    expect(filtered.length).toBe(3);\n    expect(filtered.map(i => i.revision)).toEqual([10, 11, 12]);\n  });\n});\n\n\ndescribe('Mark tickets as reverted', () => {\n  test('out of order commits', () => {\n    const tickets = [\n      {\n        key: 'ENG-123',\n        commits: [\n          // Not in date order\n          { date: '2020-02-02T16:02:36-08:00', reverted: null },\n          { date: '2020-02-04T16:02:36-08:00', reverted: 10 },\n          { date: '2020-02-03T16:02:36-08:00', reverted: null },\n        ]\n      }\n    ];\n    decorateTicketReverts(tickets);\n    expect(tickets[0].reverted).toBe(10);\n  });\n\n  test('reverted by commit', () => {\n    const tickets = [\n      {\n        key: 'ENG-123',\n        commits: [\n          { date: '2020-02-04T16:02:36-08:00', revertedBy: 10 },\n          { date: '2020-02-02T16:02:36-08:00', reverted: null },\n          { date: '2020-02-03T16:02:36-08:00', reverted: null },\n        ]\n      }\n    ];\n    decorateTicketReverts(tickets);\n    expect(tickets[0].reverted).toBe(10);\n  });\n\n  test('no reverts', () => {\n    const tickets = [\n      {\n        key: 'ENG-123',\n        commits: [\n          { date: '2020-02-03T16:02:36-08:00', reverted: null },\n        ]\n      }\n    ];\n    decorateTicketReverts(tickets);\n    expect(tickets[0].reverted).toBeFalsy();\n  });\n\n  test('no commits', () => {\n    // This shouldn't happen, but just in case, it shouldn't fall over.\n    const tickets = [\n      { key: 'ENG-123' },\n    ];\n    decorateTicketReverts(tickets);\n    expect(tickets[0].reverted).toBe(null);\n  });\n});\n\ntest('Get all ticket reporters', () => {\n  const tickets = [\n    {\n      key: 'ENG-1234',\n      slackUser: 'zaSlack',\n      fields: {\n        reporter: { email: 'za@za.com', displayName: 'Za' },\n      }\n    },\n    {\n      key: 'ENG-234',\n      slackUser: 'zaSlack',\n      fields: {\n        reporter: { email: 'za@za.com', displayName: 'Za' },\n      }\n    },\n    {\n      key: 'ENG-345',\n      slackUser: 'tomsSlack',\n      fields: {\n        reporter: { email: 'tom@tom.com', displayName: 'Thomas' },\n      }\n    },\n  ];\n  const reporters = getTicketReporters(tickets);\n  const za = reporters.find(r => r.name === 'Za');\n  const tom = reporters.find(r => r.name === 'Thomas');\n\n  expect(reporters.length).toBe(2);\n  expect(za.tickets.map(t => t.key)).toEqual(['ENG-1234', 'ENG-234']);\n  expect(tom.tickets.map(t => t.key)).toEqual(['ENG-345']);\n});\n\ndescribe('Get pending tickets', () => {\n  test('single approval status in config', () => {\n    const tickets = [\n      {\n        key: 'ENG-1234',\n        fields: { status: { name: 'Done' } }\n      },\n      {\n        key: 'ENG-234',\n        fields: { status: { name: 'Todo' } }\n      },\n    ];\n    const config = { jira: { approvalStatus: 'Done' }};\n    const groups = groupTicketsByStatus(config, tickets);\n\n    expect(groups.pending[0].key).toBe('ENG-234');\n    expect(groups.approved[0].key).toBe('ENG-1234');\n  });\n\n  test('multiple approval statuses in config', () => {\n    const tickets = [\n      {\n        key: 'ENG-1234',\n        fields: { status: { name: 'Done' } }\n      },\n      {\n        key: 'ENG-234',\n        fields: { status: { name: 'Todo' } }\n      },\n      {\n        key: 'ENG-345',\n        fields: { status: { name: 'Closed' } }\n      },\n    ];\n    const config = { jira: { approvalStatus: ['Done', 'Closed'] }};\n    const groups = groupTicketsByStatus(config, tickets);\n\n    expect(groups.pending.map(t => t.key)).toEqual(['ENG-234']);\n    expect(groups.approved.map(t => t.key)).toEqual(['ENG-1234', 'ENG-345']);\n  });\n\n  test('case insensitive', () => {\n    const tickets = [\n      {\n        key: 'ENG-1234',\n        fields: { status: { name: 'done' } }\n      },\n      {\n        key: 'ENG-345',\n        fields: { status: { name: 'ClOsEd' } }\n      },\n      {\n        key: 'ENG-234',\n        fields: { status: { name: 'Todo' } }\n      },\n    ];\n    const config = { jira: { approvalStatus: ['DONE', 'Closed'] }};\n    const groups = groupTicketsByStatus(config, tickets);\n\n    expect(groups.pending.map(t => t.key)).toEqual(['ENG-234']);\n    expect(groups.approved.map(t => t.key)).toEqual(['ENG-1234', 'ENG-345']);\n  });\n\n  test('no approval status in config', () => {\n    const tickets = [\n      {\n        key: 'ENG-1234',\n        fields: { status: { name: 'Done' } }\n      },\n      {\n        key: 'ENG-234',\n        fields: { status: { name: 'Todo' } }\n      },\n    ];\n\n    // Undefined\n    const config = { jira: { approvalStatus: undefined }};\n    let groups = groupTicketsByStatus(config, tickets);\n    expect(groups.pending.map(t => t.key)).toEqual(['ENG-1234', 'ENG-234']);\n    expect(groups.approved.length).toBe(0);\n\n    // Empty list\n    config.jira.approvalStatus = [];\n    groups = groupTicketsByStatus(config, tickets);\n    expect(groups.pending.map(t => t.key)).toEqual(['ENG-1234', 'ENG-234']);\n    expect(groups.approved.length).toBe(0);\n  });\n});\n\n// Pull it all together\ntest('transfor commit logs into template data', () => {\n  const createTicket = (key, reporter, status) => (\n    {\n      key,\n      slackUser: reporter,\n      fields: {\n        issuetype: { name: 'Story' },\n        reporter: { email: reporter, displayName: reporter },\n        status: { name: status },\n      }\n    }\n  );\n  const commitLogs = [\n    {\n      revision: 11,\n      date: '2020-02-05T16:02:36-08:00',\n      tickets: []\n    },\n    {\n      revision: 10,\n      date: '2020-02-04T16:02:36-08:00',\n      tickets: [\n        createTicket('ENG-123', 'za', 'Done'),\n      ]\n    },\n    {\n      revision: 9,\n      date: '2020-02-03T16:02:36-08:00',\n      tickets: [\n        createTicket('ENG-234', 'john', 'Todo'),\n        createTicket('ENG-345', 'za', 'QA'),\n      ]\n    },\n    {\n      revision: 8,\n      date: '2020-02-01T16:02:36-08:00',\n      reverted: 7,\n      tickets: [\n        createTicket('ENG-567', 'za', 'QA'),\n      ]\n    },\n    {\n      revision: 7,\n      date: '2020-02-01T16:00:36-08:00',\n      tickets: [\n        createTicket('ENG-567', 'za', 'QA'),\n      ]\n    },\n    {\n      revision: 6,\n      date: '2020-01-29T16:00:36-08:00',\n      reverted: 5,\n      tickets: [\n        createTicket('ENG-987', 'debbie', 'QA'),\n      ]\n    },\n  ];\n  const config = { jira: { approvalStatus: ['Done', 'Closed'] }};\n  const transformed = transformCommitLogs(config, commitLogs);\n\n  const { commits, tickets } = transformed;\n\n  expect(commits.all.length).toBe(5);\n  expect(commits.tickets.length).toBe(4);\n  expect(commits.noTickets.length).toBe(1);\n  expect(commits.reverted.length).toBe(2);\n\n  expect(tickets.all.length).toBe(5);\n  expect(tickets.approved.length).toBe(1);\n  expect(tickets.pending.length).toBe(4);\n  expect(tickets.pendingByOwner.length).toBe(3);\n  expect(tickets.reverted.length).toBe(2);\n});\n"],"file":"template.test.js"}